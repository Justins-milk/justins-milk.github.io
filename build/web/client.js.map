{"version":3,"file":"client.js","mappings":"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Q,GuC9CsB,IvC8CH,OACzB,GuC/C4B,IvC+CT,OACrB,IuC0DD,S,EtC3L0C,EsC2LlC,GtC3LkC,EsC2LlC,GvCtDmG,EAC7G,EAAM,KAAQ,G,IuCsDZ,S,EtC5L0C,EsC4LlC,GtC5LkC,EsC4LlC,GvCtDW,EAAc,EAAM,KAAQ,G,IuCuD/C,S,EtC7L0C,EsC6LlC,GtC7LkC,EsC6LlC,GvCvD8C,EAAc,EAAM,KAAQ,G,MQ3C1E,E+BVyC,K,EAAiC,EAAG,K,EA8E9E,GvChCN,OAAQ,GuCiCM,EvCjCa,OACzB,GuCiCY,EvCjCO,OACrB,GuCiCc,G,EAjFiF,UAAU,EAC5G,K,EAqFS,GvCrCc,OAAQ,GuCsCd,EvCrCX,OAAQ,GuCsCG,EvCtCgB,OAAQ,GuCuCxB,G,EAXR,GvChCN,OAAQ,GuCiCM,EvCjCa,OACzB,GuCiCY,EvCjCO,OACrB,GuCiCc,G,EAHR,IA3ET,IvC2CG,OAAQ,IuC3CX,IvC2C8B,OACzB,IuC5CL,IvC4CwB,OACrB,IuC0DD,S,EtC3L0C,EsC2LlC,GtC3LkC,EsC2LlC,GvCtDmG,EAC7G,EAAM,KAAQ,G,IuCsDZ,S,EtC5L0C,EsC4LlC,GtC5LkC,EsC4LlC,GvCtDW,EAAc,EAAM,KAAQ,G,IuCuD/C,S,EtC7L0C,EsC6LlC,GtC7LkC,EsC6LlC,GvCvD8C,EAAc,EAAM,KAAQ,GQzCnD,IR7CkB,OAAQ,GAH5C,OAAQ,GQgDsD,G,M+BRhB,U,EAAW,EAAG,K/BSjEC,E+BiHD,GvC/DC,OAAQ,GAAK,EAAM,KAAQ,GACpC,OAAQ,GAAK,EAAM,KAAQ,GAAU,OAAQ,GAAK,EAAM,KACrD,IQjDMC,GRsEsC,OAAQ,GAAK,EAC/D,KAAQ,GAAW,OAAQ,GAAK,EAAM,KAAQ,GAAW,OAClD,GAAK,EAAM,KAAQ,KQxE+C,UAAU,EAAG,MAAtD,IACpBC,E+B6DD,GvChCN,OAAQ,GuCiCM,EvCjCa,OACzB,GuCiCY,EvCjCO,OACrB,GuCiCc,G,E/B/DP,K+BNkC,K,EAA0B,U,GAkE7D,GvChCN,OAAQ,GuCiCM,EvCjCa,OACzB,GuCiCY,EvCjCO,OACrB,GuCiCc,GAuCf,U,GtCzM0C,GsCyMlC,GtCzMkC,GsCyMlC,GvC7DZ,GAAc,GAAM,KAAQ,G,IuC8DxB,U,GtC1M0C,GsC0MlC,GtC1MkC,GsC0MlC,GvC9DuB,GACzB,GAAM,KAAQ,G,IuC8DpB,U,GtC3M0C,GsC2MlC,GtC3MkC,GsC2MlC,GvC7DT,GAAc,GAAM,KAAQ,G,OQ1CnB,E+BJC,K,GAA6B,EAAG,K,GA+DlC,GvChCN,OAAQ,GuCiCM,GvCjCa,OACzB,GuCiCY,GvCjCO,OACrB,GuCiCc,IAyBf,W,GtC3L0C,GsC2LlC,GtC3LkC,GsC2LlC,GvCtDmG,GAC7G,GAAM,KAAQ,G,IuCsDZ,W,GtC5L0C,GsC4LlC,GtC5LkC,GsC4LlC,GvCtDW,GAAc,GAAM,KAAQ,G,IuCuD/C,W,GtC7L0C,GsC6LlC,GtC7LkC,GsC6LlC,GvCvD8C,GAAc,GAAM,KAAQ,EQjC5E,CACF,CoC6sDgC,CpCzsDpC,OAAO,CACT,E,kBAGIb,EACA3D,EACA4D,EACAC,G,MAEF,QAASF,EAAI3D,EAAG4D,EAAaC,G,M+BT9B,U,EAAQ,UAqDP,EAAO,GvChCN,OAAQ,GuCiCM,EvCjCa,OACzB,GuCiCY,EvCjCO,OACrB,GuCiCc,G/B7Cf,UAAa,GAAI,G,MACjB,K+BZoB,K,EAAY,U,EAqDzB,GvChCN,OAAQ,GuCiCM,EvCjCa,OACzB,GuCiCY,EvCjCO,OACrB,GuCiCc,GAyBf,S,EtC3L0C,EsC2LlC,GtC3LkC,EsC2LlC,GvCtDmG,EAC7G,EAAM,KAAQ,G,IuCsDZ,S,EtC5L0C,EsC4LlC,GtC5LkC,EsC4LlC,GvCtDW,EAAc,EAAM,KAAQ,G,IuCuD/C,S,EtC7L0C,EsC6LlC,GtC7LkC,EsC6LlC,GvCvD8C,EAAc,EAAM,KAAQ,G,MQflF,K+BZc,K,EAAY,U,EAoDnB,GvChCN,OAAQ,GuCiCM,EvCjCa,OACzB,GuCiCY,EvCjCO,OACrB,GuCiCc,GAyBf,S,EtC3L0C,EsC2LlC,GtC3LkC,EsC2LlC,GvCtDmG,EAC7G,EAAM,KAAQ,G,IuCsDZ,S,EtC5L0C,EsC4LlC,GtC5LkC,EsC4LlC,GvCtDW,EAAc,EAAM,KAAQ,G,IuCuD/C,S,EtC7L0C,Es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ITRkE,MSQ/E,EAAa,IAAb,C,IAAA,IAEhB,EAAOlH,EAAPkH,EAAiB,EAAC,EAAI,EAAL,EAAQ,IAAI,EAAE,EAAd,GAAV,GAFS,KAEhB,QAAuC,EAAE,EAAF,EAAkB,EAAV,EAA/C,EAFgB,OAGlB,C,IAHAjH,EAAkB,EAKlB,OADA,UAAQC,IAAID,GACLvH,IACT,E,kBAuLUmH,G,Q3BjDN,EAAE,KAAQ,G2BiDe,O3B65BoD,EA98B/D,EAAE,KAAQ,G2BiDQ,UAAoB,EAAc,EAAK,E,kBACjEA,G,Q3BjDC,EAAE,KAAQ,G,EAAI,EAAE,KAAQ,G2BiDN,O3B45BoD,EA78B1C,EAAE,KAAQ,G2BiDb,YAAkC,EAAa,E,kBACzEsH,EAAmBC,EAAmBC,G,IAC9C,Y1B1N0C,E0B0NjC,G1B1NiC,E0B0NjC,G3BjDe,E,I2BkDxB,Y1B3N0C,E0B2NjC,G1B3NiC,E0B2NjC,G3BjDF,E,I2BkDP,Y1B5N0C,E0B4NjC,G1B5NiC,E0B4NjC,G3BjDJ,E,I2BkDL,Y1B7N0C,E0B6NjC,G1B7NiC,E0B6NjC,G3BlDkB,E,I2BmD3B,Y1B9N0C,E0B8NjC,G1B9NiC,E0B8NjC,G3BnDwC,E,I2BoDjD,Y1B/N0C,E0B+NjC,G1B/NiC,E0B+NjC,G3BpD8D,E,I2BqDvE,Y1BhO0C,E0BgOjC,G1BhOiC,E0BgOjC,G3BpDN,E,I2BqDH,Y1BjO0C,E0BiOjC,G1BjOiC,E0BiOjC,G3BrDgB,E,I2BsDzB,Y1BlO0C,E0BkOjC,G1BlOiC,E0BkOjC,G3BtDsC,E,I2BuD/C,Y1BnO0C,E0BmOjC,G1BnOiC,E0BmOjC,G3BtDV,E,I2BuDC,Y1BpO0C,E0BoOlC,I1BpOkC,E0BoOlC,I3BvDa,E,I2BwDrB,YACA,O1BtO0C,E0BqOlC,I1BrOkC,E0BqOlC,I3BxDmC,E2ByDpC3O,IACT,E,kBAdUyO,EAAmBC,EAAmBC,EAAAA,G,eAAzB,I,QAAmB,I,QAAmB,I,8DAiBlDC,EAAsBC,EAAsBC,EAAsBC,G,IAC3EC,EAAQH,EACRI,EAAQH,EACRI,EAAQH,EACRI,EAAkBH,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,EAC7B,GAAAC,E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","sources":["webpack://client/webpack/universalModuleDefinition","webpack://client/../../../../webglmath/src/main/kotlin/Uniform.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/libraries/stdlib/js/src/org.w3c/org.khronos.webgl.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/dynamic.kt","webpack://client/../../../../client/src/main/kotlin/App.kt","webpack://client/../../../../client/src/main/kotlin/GameObject.kt","webpack://client/../../../../client/src/main/kotlin/KeyNames.kt","webpack://client/../../../../client/src/main/kotlin/Material.kt","webpack://client/../../../../client/src/main/kotlin/Mesh.kt","webpack://client/../../../../client/src/main/kotlin/OrthoCamera.kt","webpack://client/../../../../client/src/main/kotlin/PhysicsGameObject.kt","webpack://client/../../../../client/src/main/kotlin/Program.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Arrays.kt","webpack://client/../../../../client/src/main/kotlin/Scene.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Standard.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/MutableCollections.kt","webpack://client/../../../../client/src/main/kotlin/Shader.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Char.kt","webpack://client/../../../../client/src/main/kotlin/Texture2D.kt","webpack://client/../../../../client/src/main/kotlin/TexturedQuadGeometry.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/builtins/Library.kt","webpack://client/../../../../webglmath/src/main/kotlin/Drawable.kt","webpack://client/../../../../webglmath/src/main/kotlin/Geometry.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec1.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec1Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec2.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec3.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVec4.kt","webpack://client/../../../../webglmath/src/main/kotlin/IVecArray.kt","webpack://client/../../../../webglmath/src/main/kotlin/Mat4.kt","webpack://client/../../../../webglmath/src/main/kotlin/Mat4Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/ProgramReflection.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Maps.kt","webpack://client/../../../../webglmath/src/main/kotlin/Sampler2D.kt","webpack://client/../../../../webglmath/src/main/kotlin/Sampler3D.kt","webpack://client/../../../../webglmath/src/main/kotlin/SamplerCube.kt","webpack://client/../../../../webglmath/src/main/kotlin/UniformProvider.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec1.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec1Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec2.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec2Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec3.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec3Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec4.kt","webpack://client/../../../../webglmath/src/main/kotlin/Vec4Array.kt","webpack://client/../../../../webglmath/src/main/kotlin/VecArray.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Collections.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/math.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/ArrayBuffer.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/math.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Sets.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/LinkedHashSet.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/LinkedHashMap.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Ranges.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Sequences.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractCollection.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractList.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractMap.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractSet.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Collections.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/PrimitiveIterators.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Sequences.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashSet.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashMap.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/internal/progressionUtil.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/random/Random.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/random/XorWowRandom.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Preconditions.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/PrimitiveRanges.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/ProgressionIterators.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/Progressions.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Appendable.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/typeCheckUtils.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/char.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/StringNumberConversions.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/numberConversions.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Strings.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/string.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/stringsCode.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/arrays.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/noPackageHacks.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Tuples.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/core/builtins/native/kotlin/Number.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/core/builtins/src/kotlin/Unit.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/runtime/primitiveCompanionObjects.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/kotlinHacks.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableCollection.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableList.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableMap.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableSet.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/ArrayList.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/EqualityComparator.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalHashCodeMap.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/reflect/KClassImpl.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/reflect/primitives.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/reflect/reflection.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/StringBuilderJs.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/src/generated/_DigitChars.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/CharCode.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/regex.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/builtins/Char.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/BitMask.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/bitUtils.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/runtimeForStdLib.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/charSequence.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/numberConversion.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/unsigned/src/kotlin/UShort.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/collectionsHacks.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/coreRuntime.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/hacks.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/long.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/longjs.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/numbers.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/rangeTo.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/runtime/reflectRuntime.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/src/generated/_ArraysJs.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/src/kotlin/exceptions.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Strings.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/regexp.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalMap.kt","webpack://client/../../../../client/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Iterables.kt","webpack://client/webpack/bootstrap","webpack://client/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"client\"] = factory();\n\telse\n\t\troot[\"client\"] = factory();\n})(this, () => {\nreturn ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLTexture\r\nimport kotlin.reflect.KProperty\r\n\r\ninterface Texture {\r\n\tabstract val glTexture : WebGLTexture?\r\n}\r\n\r\ninterface Uniform {\r\n\tfun set(other: Uniform) : Uniform\r\n\tfun set(vararg values : Float) : Uniform\r\n\tfun set(firstValue : Int, vararg values : Int) : Uniform\r\n\tfun set(firstTexture : Texture, vararg moreTextures : Texture)\r\n\tfun getStorageSize() : Int\r\n\tinfix fun gets(other : Uniform){\r\n\t\tset(other)\r\n\t}\r\n\r\n\tfun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int = 0)\r\n}\r\n\r\ninterface UniformFloat : Uniform {\r\n\tabstract val storage : Float32Array\r\n\r\n\toverride fun getStorageSize() : Int{\r\n\t\treturn storage.length\r\n\t}\r\n\r\n\toverride fun set(other: Uniform) : Uniform {\r\n\t\tif(other is UniformFloat){\r\n\t\t\tfor(i : Int in 0 until storage.length) {\r\n\t    \t\tstorage[i] = if(i < other.storage.length) other.storage[i] else 0.0f\r\n\t    }\r\n    } else {\r\n\t\t\tthrow Error(\"Cannot set a uniform of floats from a non-float uniform.\")\r\n    }\r\n    return this\r\n\t}\r\n\r\n\toverride fun set(firstValue : Int, vararg values : Int) : Uniform {\r\n\t\tthrow Error(\"Cannot set int values to a float uniform.\")\r\n\t}\t\r\n\r\n\toverride fun set(firstTexture : Texture, vararg moreTextures : Texture){\r\n\t\tthrow Error(\"Cannot set a texture to a non-sampler uniform.\")\r\n\t}\r\n\r\n}\r\n\r\ninterface UniformInt : Uniform {\r\n\tabstract val storage : Int32Array\r\n\r\n\toverride fun getStorageSize() : Int{\r\n\t\treturn storage.length\r\n\t}\r\n\r\n\toverride fun set(other: Uniform) : Uniform {\r\n\t\tif(other is UniformInt){\r\n\t\t\tfor(i : Int in 0 until storage.length) {\r\n\t    \t\tstorage[i] = if(i < other.storage.length) other.storage[i] else 0\r\n\t    }\r\n    } else {\r\n\t\t\tthrow Error(\"Cannot set a uniform of ints from a non-int uniform.\")\r\n    }\r\n    return this\r\n\t}\r\n\r\n\toverride fun set(vararg values : Float) : Uniform {\r\n\t\tif(values.size == 0){\r\n\t\t\tfor(i : Int in 0 until storage.length) {\r\n\t    \t\tstorage[i] = 0\r\n\t    }\t\t\t\r\n\t\t} else {\r\n\t\t\tthrow Error(\"Cannot set float values to an int uniform.\")\r\n\t\t}\r\n\t\treturn this\r\n\t}\t\r\n\r\n\toverride fun set(firstTexture : Texture, vararg moreTextures : Texture){\r\n\t\tthrow Error(\"Cannot set a texture to a non-sampler uniform.\")\r\n\t}\r\n}\r\n\r\ninterface UniformSampler : Uniform {\r\n\tabstract val storage : Int32Array\r\n\tabstract val glTextures : Array<WebGLTexture?>\r\n\r\n\toverride fun getStorageSize() : Int{\r\n\t\treturn storage.length\r\n\t}\r\n\r\n\toverride fun set(other: Uniform) : Uniform {\r\n\t\tif(other is UniformSampler){\r\n\t\t\tfor(i : Int in 0 until storage.length) {\r\n\t    \t\tstorage[i] = if(i < other.storage.length) other.storage[i] else 0\r\n\t    \t\tglTextures[i] = other.glTextures.getOrNull(i)\r\n\t    }\r\n    } else {\r\n\t\t\tthrow Error(\"Cannot set a uniform of textures from a non-texture uniform.\")\r\n    }\r\n    return this\r\n\t}\r\n\r\n\toverride fun set(firstTexture : Texture, vararg moreTextures : Texture){\r\n\t\tglTextures[0] = firstTexture.glTexture\r\n\t\tfor(i : Int in 0 until storage.length) {\r\n\t\t\tglTextures[i+1] = moreTextures.getOrNull(i)?.glTexture\r\n\t\t}\r\n\t}\r\n\r\n\toverride fun set(vararg values : Float) : Uniform {\r\n\t\tif(values.size == 0){\r\n\t\t\tthrow Error(\"Cannot set no value to a texture uniform.\")\r\n\t\t} else {\r\n\t\t\tthrow Error(\"Cannot set float values to a texture uniform.\")\r\n\t\t}\r\n\t}\r\n\r\n\toverride fun set(firstValue : Int, vararg values : Int) : Uniform {\r\n\t\tthrow Error(\"Cannot set int values to a texture uniform.\")\r\n\t}\t\r\n}\r\n\r\n",null,null,"import kotlinx.browser.document\r\nimport kotlinx.browser.window\r\nimport org.w3c.dom.HTMLDivElement\r\nimport org.w3c.dom.HTMLCanvasElement\r\nimport org.w3c.dom.events.*\r\nimport org.w3c.dom.Window\r\n\r\nclass App(val canvas : HTMLCanvasElement, val overlay : HTMLDivElement) {\r\n\r\n  val keysPressed = HashSet<String>()\r\n\r\n  val gl = (canvas.getContext(\"webgl2\", object{val alpha = false}) ?: throw Error(\"Browser does not support WebGL2\")) as WebGL2RenderingContext //#alpha# never make canvas transparent ˙HUN˙ ne legyen áttetsző a vászon  \r\n\r\n  val scene = Scene(gl)//#scene# this object is responsible for resource allocation and drawing ˙HUN˙ ez az objektum felel az erőforrások kezeléséért és kirajzolásáért\r\n  init {\r\n    resize()//## we adjust render resolution in a separate method, as we will also need it when the canvas is resized ˙HUN˙ rajzolási felbontás beállítása külön metódusban, mert ablakátméretezéskor is kell majd ugyanez\r\n  }\r\n\r\n  fun resize() {\r\n    canvas.width = canvas.clientWidth//#canvas.width# rendering resolution ˙HUN˙ rajzolási felbontás #canvas.clientWidth# canvas size ˙HUN˙ a vászon mérete \r\n    canvas.height = canvas.clientHeight\r\n    scene.resize(canvas)\r\n  }\r\n\r\n  @Suppress(\"UNUSED_PARAMETER\")\r\n  fun registerEventHandlers() {\r\n    document.onkeydown =  { //#{# locally defined function\r\n      event : KeyboardEvent ->\r\n      keysPressed.add( keyNames[event.keyCode] )\r\n    }\r\n\r\n    document.onkeyup = { \r\n      event : KeyboardEvent ->\r\n      keysPressed.remove( keyNames[event.keyCode] )\r\n\r\n    }\r\n\r\n    canvas.onmousedown = { \r\n      event : MouseEvent ->\r\n      // event.x.toInt()\r\n      // event.y.toInt()\r\n      event\r\n    }\r\n\r\n    canvas.onmousemove = { \r\n      event : Event ->\r\n      event.stopPropagation()\r\n    }\r\n\r\n    canvas.onmouseup = { \r\n      event : Event ->\r\n      event // This line is a placeholder for event handling code. It has no effect, but avoids the \"unused parameter\" warning.\r\n    }\r\n\r\n    canvas.onmouseout = { \r\n      event : Event ->\r\n      event // This line is a placeholder for event handling code. It has no effect, but avoids the \"unused parameter\" warning.\r\n    }\r\n\r\n    window.onresize = {\r\n      event : Event ->\r\n      resize()\r\n    }\r\n\r\n    window.requestAnimationFrame {//#requestAnimationFrame# trigger rendering\r\n      update()//#update# this method is responsible; for drawing a frame\r\n    }\r\n  }  \r\n\r\n  fun update() {\r\n    scene.update(keysPressed)    \r\n    window.requestAnimationFrame { update() }\r\n  }\r\n}\r\n\r\nfun main() {\r\n  val canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\r\n  val overlay = document.getElementById(\"overlay\") as HTMLDivElement\r\n  \r\n\r\n  try{\r\n    val app = App(canvas, overlay)//#app# from this point on,; this object is responsible; for handling everything\r\n    app.registerEventHandlers()//#registerEventHandlers# we implement this; to make sure the app; knows when there is; something to do\r\n  } catch(e : Error) {\r\n    console.error(e.message)\r\n  }\r\n}","import vision.gears.webglmath.*\r\nimport kotlin.math.exp\r\nimport kotlin.math.PI\r\nimport kotlin.math.floor\r\n\r\nopen class GameObject(\r\n  vararg val meshes : Mesh\r\n   ) : UniformProvider(\"gameObject\") {\r\n\r\n  val position = Vec3()\r\n  var roll = 0.0f\r\n  val scale = Vec3(1.0f, 1.0f, 1.0f)\r\n\r\n  val modelMatrix by Mat4()\r\n\r\n  init { \r\n    addComponentsAndGatherUniforms(*meshes)\r\n  }\r\n\r\n  fun update() {\r\n    modelMatrix.set().\r\n      scale(scale).\r\n      rotate(roll).\r\n      translate(position)\r\n  }\r\n\r\n  open fun move(\r\n      dt : Float = 0.016666f,\r\n      t : Float = 0.0f,\r\n      keysPressed : Set<String> = emptySet<String>(),\r\n      gameObjects : List<GameObject> = emptyList<GameObject>()\r\n      ) : Boolean {\r\n    return true;\r\n  }\r\n\r\n}\r\n","\r\nobject keyNames {\r\n  private val lookup = arrayOf (\r\n    \"\", // [0]\r\n    \"\", // [1]\r\n    \"\", // [2]\r\n    \"CANCEL\", // [3]\r\n    \"\", // [4]\r\n    \"\", // [5]\r\n    \"HELP\", // [6]\r\n    \"\", // [7]\r\n    \"BACK_SPACE\", // [8]\r\n    \"TAB\", // [9]\r\n    \"\", // [10]\r\n    \"\", // [11]\r\n    \"CLEAR\", // [12]\r\n    \"ENTER\", // [13]\r\n    \"ENTER_SPECIAL\", // [14]\r\n    \"\", // [15]\r\n    \"SHIFT\", // [16]\r\n    \"CONTROL\", // [17]\r\n    \"ALT\", // [18]\r\n    \"PAUSE\", // [19]\r\n    \"CAPS_LOCK\", // [20]\r\n    \"KANA\", // [21]\r\n    \"EISU\", // [22]\r\n    \"JUNJA\", // [23]\r\n    \"FINAL\", // [24]\r\n    \"HANJA\", // [25]\r\n    \"\", // [26]\r\n    \"ESCAPE\", // [27]\r\n    \"CONVERT\", // [28]\r\n    \"NONCONVERT\", // [29]\r\n    \"ACCEPT\", // [30]\r\n    \"MODECHANGE\", // [31]\r\n    \"SPACE\", // [32]\r\n    \"PAGE_UP\", // [33]\r\n    \"PAGE_DOWN\", // [34]\r\n    \"END\", // [35]\r\n    \"HOME\", // [36]\r\n    \"LEFT\", // [37]\r\n    \"UP\", // [38]\r\n    \"RIGHT\", // [39]\r\n    \"DOWN\", // [40]\r\n    \"SELECT\", // [41]\r\n    \"PRINT\", // [42]\r\n    \"EXECUTE\", // [43]\r\n    \"PRINTSCREEN\", // [44]\r\n    \"INSERT\", // [45]\r\n    \"DELETE\", // [46]\r\n    \"\", // [47]\r\n    \"0\", // [48]\r\n    \"1\", // [49]\r\n    \"2\", // [50]\r\n    \"3\", // [51]\r\n    \"4\", // [52]\r\n    \"5\", // [53]\r\n    \"6\", // [54]\r\n    \"7\", // [55]\r\n    \"8\", // [56]\r\n    \"9\", // [57]\r\n    \"COLON\", // [58]\r\n    \"SEMICOLON\", // [59]\r\n    \"LESS_THAN\", // [60]\r\n    \"EQUALS\", // [61]\r\n    \"GREATER_THAN\", // [62]\r\n    \"QUESTION_MARK\", // [63]\r\n    \"AT\", // [64]\r\n    \"A\", // [65]\r\n    \"B\", // [66]\r\n    \"C\", // [67]\r\n    \"D\", // [68]\r\n    \"E\", // [69]\r\n    \"F\", // [70]\r\n    \"G\", // [71]\r\n    \"H\", // [72]\r\n    \"I\", // [73]\r\n    \"J\", // [74]\r\n    \"K\", // [75]\r\n    \"L\", // [76]\r\n    \"M\", // [77]\r\n    \"N\", // [78]\r\n    \"O\", // [79]\r\n    \"P\", // [80]\r\n    \"Q\", // [81]\r\n    \"R\", // [82]\r\n    \"S\", // [83]\r\n    \"T\", // [84]\r\n    \"U\", // [85]\r\n    \"V\", // [86]\r\n    \"W\", // [87]\r\n    \"X\", // [88]\r\n    \"Y\", // [89]\r\n    \"Z\", // [90]\r\n    \"OS_KEY\", // [91] Windows Key (Windows) or Command Key (Mac)\r\n    \"\", // [92]\r\n    \"CONTEXT_MENU\", // [93]\r\n    \"\", // [94]\r\n    \"SLEEP\", // [95]\r\n    \"NUMPAD0\", // [96]\r\n    \"NUMPAD1\", // [97]\r\n    \"NUMPAD2\", // [98]\r\n    \"NUMPAD3\", // [99]\r\n    \"NUMPAD4\", // [100]\r\n    \"NUMPAD5\", // [101]\r\n    \"NUMPAD6\", // [102]\r\n    \"NUMPAD7\", // [103]\r\n    \"NUMPAD8\", // [104]\r\n    \"NUMPAD9\", // [105]\r\n    \"MULTIPLY\", // [106]\r\n    \"ADD\", // [107]\r\n    \"SEPARATOR\", // [108]\r\n    \"SUBTRACT\", // [109]\r\n    \"DECIMAL\", // [110]\r\n    \"DIVIDE\", // [111]\r\n    \"F1\", // [112]\r\n    \"F2\", // [113]\r\n    \"F3\", // [114]\r\n    \"F4\", // [115]\r\n    \"F5\", // [116]\r\n    \"F6\", // [117]\r\n    \"F7\", // [118]\r\n    \"F8\", // [119]\r\n    \"F9\", // [120]\r\n    \"F10\", // [121]\r\n    \"F11\", // [122]\r\n    \"F12\", // [123]\r\n    \"F13\", // [124]\r\n    \"F14\", // [125]\r\n    \"F15\", // [126]\r\n    \"F16\", // [127]\r\n    \"F17\", // [128]\r\n    \"F18\", // [129]\r\n    \"F19\", // [130]\r\n    \"F20\", // [131]\r\n    \"F21\", // [132]\r\n    \"F22\", // [133]\r\n    \"F23\", // [134]\r\n    \"F24\", // [135]\r\n    \"\", // [136]\r\n    \"\", // [137]\r\n    \"\", // [138]\r\n    \"\", // [139]\r\n    \"\", // [140]\r\n    \"\", // [141]\r\n    \"\", // [142]\r\n    \"\", // [143]\r\n    \"NUM_LOCK\", // [144]\r\n    \"SCROLL_LOCK\", // [145]\r\n    \"WIN_OEM_FJ_JISHO\", // [146]\r\n    \"WIN_OEM_FJ_MASSHOU\", // [147]\r\n    \"WIN_OEM_FJ_TOUROKU\", // [148]\r\n    \"WIN_OEM_FJ_LOYA\", // [149]\r\n    \"WIN_OEM_FJ_ROYA\", // [150]\r\n    \"\", // [151]\r\n    \"\", // [152]\r\n    \"\", // [153]\r\n    \"\", // [154]\r\n    \"\", // [155]\r\n    \"\", // [156]\r\n    \"\", // [157]\r\n    \"\", // [158]\r\n    \"\", // [159]\r\n    \"CIRCUMFLEX\", // [160]\r\n    \"EXCLAMATION\", // [161]\r\n    \"DOUBLE_QUOTE\", // [162]\r\n    \"HASH\", // [163]\r\n    \"DOLLAR\", // [164]\r\n    \"PERCENT\", // [165]\r\n    \"AMPERSAND\", // [166]\r\n    \"UNDERSCORE\", // [167]\r\n    \"OPEN_PAREN\", // [168]\r\n    \"CLOSE_PAREN\", // [169]\r\n    \"ASTERISK\", // [170]\r\n    \"PLUS\", // [171]\r\n    \"PIPE\", // [172]\r\n    \"HYPHEN_MINUS\", // [173]\r\n    \"OPEN_CURLY_BRACKET\", // [174]\r\n    \"CLOSE_CURLY_BRACKET\", // [175]\r\n    \"TILDE\", // [176]\r\n    \"\", // [177]\r\n    \"\", // [178]\r\n    \"\", // [179]\r\n    \"\", // [180]\r\n    \"VOLUME_MUTE\", // [181]\r\n    \"VOLUME_DOWN\", // [182]\r\n    \"VOLUME_UP\", // [183]\r\n    \"\", // [184]\r\n    \"\", // [185]\r\n    \"SEMICOLON\", // [186]\r\n    \"EQUALS\", // [187]\r\n    \"COMMA\", // [188]\r\n    \"MINUS\", // [189]\r\n    \"PERIOD\", // [190]\r\n    \"SLASH\", // [191]\r\n    \"BACK_QUOTE\", // [192]\r\n    \"\", // [193]\r\n    \"\", // [194]\r\n    \"\", // [195]\r\n    \"\", // [196]\r\n    \"\", // [197]\r\n    \"\", // [198]\r\n    \"\", // [199]\r\n    \"\", // [200]\r\n    \"\", // [201]\r\n    \"\", // [202]\r\n    \"\", // [203]\r\n    \"\", // [204]\r\n    \"\", // [205]\r\n    \"\", // [206]\r\n    \"\", // [207]\r\n    \"\", // [208]\r\n    \"\", // [209]\r\n    \"\", // [210]\r\n    \"\", // [211]\r\n    \"\", // [212]\r\n    \"\", // [213]\r\n    \"\", // [214]\r\n    \"\", // [215]\r\n    \"\", // [216]\r\n    \"\", // [217]\r\n    \"\", // [218]\r\n    \"OPEN_BRACKET\", // [219]\r\n    \"BACK_SLASH\", // [220]\r\n    \"CLOSE_BRACKET\", // [221]\r\n    \"QUOTE\", // [222]\r\n    \"\", // [223]\r\n    \"META\", // [224]\r\n    \"ALTGR\", // [225]\r\n    \"\", // [226]\r\n    \"WIN_ICO_HELP\", // [227]\r\n    \"WIN_ICO_00\", // [228]\r\n    \"\", // [229]\r\n    \"WIN_ICO_CLEAR\", // [230]\r\n    \"\", // [231]\r\n    \"\", // [232]\r\n    \"WIN_OEM_RESET\", // [233]\r\n    \"WIN_OEM_JUMP\", // [234]\r\n    \"WIN_OEM_PA1\", // [235]\r\n    \"WIN_OEM_PA2\", // [236]\r\n    \"WIN_OEM_PA3\", // [237]\r\n    \"WIN_OEM_WSCTRL\", // [238]\r\n    \"WIN_OEM_CUSEL\", // [239]\r\n    \"WIN_OEM_ATTN\", // [240]\r\n    \"WIN_OEM_FINISH\", // [241]\r\n    \"WIN_OEM_COPY\", // [242]\r\n    \"WIN_OEM_AUTO\", // [243]\r\n    \"WIN_OEM_ENLW\", // [244]\r\n    \"WIN_OEM_BACKTAB\", // [245]\r\n    \"ATTN\", // [246]\r\n    \"CRSEL\", // [247]\r\n    \"EXSEL\", // [248]\r\n    \"EREOF\", // [249]\r\n    \"PLAY\", // [250]\r\n    \"ZOOM\", // [251]\r\n    \"\", // [252]\r\n    \"PA1\", // [253]\r\n    \"WIN_OEM_CLEAR\", // [254]\r\n    \"\" // [255]\r\n  )\r\n\r\n  operator fun get(index : Int) : String {\r\n    return lookup[index]\r\n  }\r\n}\r\n\r\n","import vision.gears.webglmath.UniformProvider\r\n\r\nclass Material(program : Program) : UniformProvider(\"material\") {\r\n  init {\r\n    addComponentsAndGatherUniforms(program)\r\n  }\r\n}\r\n","import vision.gears.webglmath.UniformProvider\r\nimport vision.gears.webglmath.Geometry\r\n\r\nclass Mesh(material : Material, geometry : Geometry) : UniformProvider(\"mesh\") {\r\n\r\n  init{\r\n    addComponentsAndGatherUniforms(material, geometry)\r\n  }\r\n}","import vision.gears.webglmath.UniformProvider\r\nimport vision.gears.webglmath.Vec2\r\nimport vision.gears.webglmath.Mat4\r\n\r\nclass OrthoCamera() : UniformProvider(\"camera\") {\r\n\r\n  val position = Vec2(0.0f, 0.0f) \r\n  val roll = 0.0f \r\n  val windowSize = Vec2(2.0f, 2.0f) \r\n    \r\n  val viewProjMatrix by Mat4()\r\n  val viewProjMatrixInverse by Mat4()  \r\n  init{\r\n    updateViewProjMatrix()\r\n  }\r\n\r\n  fun updateViewProjMatrix() {\r\n    viewProjMatrixInverse.set(). \r\n      scale(0.7f, 1.0f). \r\n      scale(windowSize). \r\n      rotate(roll). \r\n      translate(position)\r\n\r\n    viewProjMatrix.set(). \r\n      scale(0.5f, 0.5f). \r\n      scale(windowSize). \r\n      rotate(roll). \r\n      translate(position). \r\n      invert()\r\n  }\r\n\r\n  fun setAspectRatio(ar : Float) { \r\n    windowSize.x = windowSize.y * ar\r\n    updateViewProjMatrix()\r\n  } \r\n}","import vision.gears.webglmath.*\r\nimport kotlin.math.exp\r\nimport kotlin.math.PI\r\nimport kotlin.math.floor\r\nimport kotlinx.browser.document\r\nimport kotlinx.browser.window\r\nimport org.w3c.dom.HTMLDivElement\r\nimport org.w3c.dom.events.*\r\nimport org.w3c.dom.Window\r\n\r\nopen class PhysicsGameObject(\r\n  vararg meshes : Mesh\r\n   ) : GameObject(*meshes) {\r\n\r\n  var health = 1\r\n  var damage = 0\r\n  var speedBoost = 0\r\n  var bullets = 1\r\n  var alive = true\r\n  var name = \"\"\r\n\r\n  val velocity = Vec3 ()\r\n  val acceleration = Vec3 ()\r\n  val force = Vec3 ()\r\n\r\n  var angularVelocity = 0.0f\r\n  var angularAcceleration = 0.0f\r\n  var torque = 0.0f\r\n\r\n  var radius = 1.0f\r\n  var invMass = 1.0f\r\n  var invAngularMass = 1.0f\r\n\r\n  open fun control (\r\n      dt : Float,\r\n      t : Float,\r\n      keysPressed : Set<String>,\r\n      gameObjects : List<GameObject>) : Boolean\r\n  {\r\n    return true;\r\n  }\r\n\r\n  fun collision (\r\n      dt : Float,\r\n      t : Float,\r\n      keysPressed : Set<String>,\r\n      gameObjects : List<GameObject>) : Boolean\r\n  {\r\n\r\n    gameObjects.forEach {\r\n      if (it is PhysicsGameObject) {\r\n        if (health <= 0){\r\n          alive = false\r\n        }\r\n        if (it.health <= 0){\r\n          it.alive = false\r\n        }\r\n\r\n        if (it != this \r\n          && (name != \"justin\" || it.name != \"missile\") && (name != \"missile\" || it.name != \"justin\")\r\n          && (name != \"ritvik\" || it.name != \"milk\") && (name != \"milk\" || it.name != \"ritvik\")\r\n          && (name != \"ramsey\" || it.name != \"milk\") && (name != \"milk\" || it.name != \"ramsey\")\r\n          && (name != \"ramsey\" || it.name != \"cheese\") && (name != \"cheese\" || it.name != \"ramsey\")\r\n          && (name != \"ritvik\" || it.name != \"cheese\") && (name != \"cheese\" || it.name != \"ritvik\")) {\r\n          val diff = position - it.position\r\n          val dist = diff.length()\r\n          if (dist < radius + it.radius) {\r\n            if (name != it.name){\r\n              if (name != \"milk\" || it.name != \"justin\"){\r\n                health -= it.damage\r\n              }\r\n              if (it.name != \"milk\" || name != \"justin\"){\r\n                it.health -= damage\r\n              }\r\n\r\n              if (it.name == \"ramsey\" && name == \"justin\"){\r\n                 speedBoost += 1\r\n              }\r\n              if (name == \"ramsey\" && it.name == \"justin\"){\r\n                 it.speedBoost += 1\r\n              }\r\n\r\n              if (it.name == \"ritvik\" && name == \"justin\"){\r\n                 bullets += 1\r\n              }\r\n              if (name == \"ritvik\" && it.name == \"justin\"){\r\n                 it.bullets += 1\r\n              }\r\n\r\n              if (health <= 0 && name == \"justin\"){\r\n                val overlay = document.getElementById(\"overlay\") as HTMLDivElement\r\n                overlay.innerHTML = \"\"\"<font color=\"red\" style=\"font-size: 36px; font-family: 'Comic Sans MS', sans-serif; position: fixed; bottom: 10px; left: 15px;\">YOU WERE MILKED<br>Reload the page to try again.</font>\"\"\"\r\n              }\r\n              if (it.health <= 0 && it.name == \"justin\"){\r\n                val overlay = document.getElementById(\"overlay\") as HTMLDivElement\r\n                overlay.innerHTML = \"\"\"<font color=\"red\" style=\"font-size: 36px; font-family: 'Comic Sans MS', sans-serif; position: fixed; bottom: 10px; left: 15px;\">YOU WERE MILKED<br>Reload the page to try again.</font>\"\"\"\r\n              }\r\n            }\r\n\r\n            val collisionNormal = diff.normalize()\r\n\r\n            position += collisionNormal * invMass / (invMass + it.invMass) * dist * 0.09f\r\n            it.position += collisionNormal * it.invMass / (invMass + it.invMass) * dist * -0.09f\r\n            \r\n            val collisionTangent = Vec3(-collisionNormal.y, collisionNormal.x, 0.0f)\r\n            val relativeVelocity = velocity - it.velocity\r\n            \r\n            val restitutionCoeff = 0.8f\r\n            val impulseLength = collisionNormal.dot(relativeVelocity) / (invMass + it.invMass) * (1.0f + restitutionCoeff)\r\n            val restitution = collisionNormal * impulseLength\r\n            velocity -= restitution * invMass\r\n            it.velocity += restitution * it.invMass       \r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  override fun move(\r\n      dt : Float,\r\n      t : Float,\r\n      keysPressed : Set<String>,\r\n      gameObjects : List<GameObject>\r\n      ) : Boolean {\r\n    control (dt, t, keysPressed, gameObjects)\r\n\r\n    acceleration.set(force * invMass)\r\n    velocity += acceleration * dt\r\n    position += velocity * dt\r\n\r\n    angularAcceleration = torque * invAngularMass\r\n    angularVelocity += angularAcceleration * dt\r\n    roll += angularVelocity * dt\r\n\r\n    velocity *= exp (-dt)\r\n    angularVelocity *= exp (-dt)\r\n\r\n    collision (dt, t, keysPressed, gameObjects)\r\n    return true;\r\n  }\r\n\r\n}\r\n","import org.khronos.webgl.WebGLRenderingContext as GL\r\nimport vision.gears.webglmath.UniformProvider\r\nimport vision.gears.webglmath.ProgramReflection\r\n\r\nclass Program(\r\n  val gl : WebGL2RenderingContext,\r\n  val vertexShader : Shader,\r\n  val fragmentShader : Shader,\r\n  attributeBindings : Array<String> = Program.PNT ) : UniformProvider(\"program\") {\r\n\r\n  val glProgram = gl.createProgram() ?: throw Error(\"Could not create WebGL program.\")\r\n\r\n  init {\r\n    gl.attachShader(glProgram, vertexShader.glShader) //#attach# OpenGL phraseology: you attach resources to one another\r\n    gl.attachShader(glProgram, fragmentShader.glShader)\r\n\r\n    var attributeIndex = 0\r\n    attributeBindings.forEach{\r\n      gl.bindAttribLocation(glProgram, attributeIndex++, it) //#vertex shader input 'it' is taken from vertex record at 'attributeIndex' \r\n    }    \r\n\r\n    gl.linkProgram(glProgram)\r\n    if (gl.getProgramParameter(glProgram, GL.LINK_STATUS) == false) {\r\n      throw Error(\"Could not link shaders [vertex shader: ${vertexShader.sourceUrl}]:[fragment shader: ${fragmentShader.sourceUrl}\\n${gl.getProgramInfoLog(this.glProgram)}\")\r\n    }\r\n\r\n    addComponentsAndGatherUniforms(ProgramReflection(gl, glProgram))\r\n  }\r\n\r\n  companion object{ //#companion object# this is how you create class static members\r\n    val PC = arrayOf(\"vertexPosition\", \"vertexColor\")\r\n    val PNT = arrayOf(\"vertexPosition\", \"vertexNormal\", \"vertexTexCoord\")\r\n  }\r\n}",null,"import org.w3c.dom.HTMLCanvasElement\r\nimport org.khronos.webgl.WebGLRenderingContext as GL //# GL# we need this for the constants declared ˙HUN˙ a constansok miatt kell\r\nimport kotlin.js.Date\r\nimport vision.gears.webglmath.UniformProvider\r\nimport vision.gears.webglmath.Vec1\r\nimport vision.gears.webglmath.Vec2\r\nimport vision.gears.webglmath.Vec3\r\nimport vision.gears.webglmath.Mat4\r\nimport kotlin.random.Random\r\nimport kotlin.math.*\r\nimport kotlinx.browser.document\r\nimport kotlinx.browser.window\r\nimport org.w3c.dom.HTMLDivElement\r\nimport org.w3c.dom.events.*\r\nimport org.w3c.dom.Window\r\n\r\nclass Scene (\r\n  val gl : WebGL2RenderingContext)  : UniformProvider(\"scene\") {\r\n\r\n  val vsTextured = Shader(gl, GL.VERTEX_SHADER, \"textured-vs.glsl\")\r\n  val vsBackground = Shader(gl, GL.VERTEX_SHADER, \"background-vs.glsl\")  \r\n  val fsTextured = Shader(gl, GL.FRAGMENT_SHADER, \"textured-fs.glsl\")\r\n  val texturedProgram = Program(gl, vsTextured, fsTextured)\r\n  val backgroundProgram = Program(gl, vsBackground, fsTextured)\r\n\r\n  //TODO: create various materials with different solidColor settings\r\n  val fighterMaterial = Material(texturedProgram).apply{\r\n    this[\"colorTexture\"]?.set(Texture2D(gl, \"media/justin_avatar.png\"))\r\n  }\r\n  val backgroundMaterial = Material(backgroundProgram).apply{\r\n    this[\"colorTexture\"]?.set(Texture2D(gl, \"media/heritage_background.webp\"))\r\n  }\r\n  /*val asteroidMaterial = Material(texturedProgram).apply{\r\n    this[\"colorTexture\"]?.set(Texture2D(gl, \"media/asteroid.png\"))\r\n  }*/\r\n  val itemMaterial = Material(texturedProgram).apply{\r\n    this[\"colorTexture\"]?.set(Texture2D(gl, \"media/almondmilk.png\"))\r\n  }\r\n  val shootMaterial = Material(texturedProgram).apply{\r\n    this[\"colorTexture\"]?.set(Texture2D(gl, \"media/ryan.webp\"))\r\n  }\r\n  val bounceMaterial = Material(texturedProgram).apply{\r\n    this[\"colorTexture\"]?.set(Texture2D(gl, \"media/cheese_packet_full.png\"))\r\n  }\r\n  val speedMaterial = Material(texturedProgram).apply{\r\n    this[\"colorTexture\"]?.set(Texture2D(gl, \"media/ramsey_head.png\"))\r\n  }\r\n  val bulletMaterial = Material(texturedProgram).apply{\r\n    this[\"colorTexture\"]?.set(Texture2D(gl, \"media/ritvik_spelling.png\"))\r\n  }\r\n\r\n  val texturedQuadGeometry = TexturedQuadGeometry(gl)\r\n  val backgroundMesh = Mesh(backgroundMaterial, texturedQuadGeometry)\r\n  val fighterMesh = Mesh(fighterMaterial, texturedQuadGeometry)\r\n  val itemMesh = Mesh(itemMaterial, texturedQuadGeometry)\r\n  val shootMesh = Mesh(shootMaterial, texturedQuadGeometry)\r\n  val bounceMesh = Mesh(bounceMaterial, texturedQuadGeometry)\r\n  val speedMesh = Mesh(speedMaterial, texturedQuadGeometry)\r\n  val bulletMesh = Mesh(bulletMaterial, texturedQuadGeometry)\r\n  //val asteroidMesh = Mesh(asteroidMaterial, texturedQuadGeometry)\r\n  \r\n  val camera = OrthoCamera().apply{\r\n    position.set(1f, 1f)\r\n    windowSize.set(20f, 20f)\r\n    updateViewProjMatrix()\r\n  }\r\n\r\n  var gameObjects = ArrayList<GameObject>()\r\n\r\n  val avatar = object : PhysicsGameObject(fighterMesh){\r\n    val gravity = -5.0f\r\n    var horizantal_force = 0.0f\r\n    var jump_force = 0.0f;\r\n    var hit_ground = false\r\n    var lastT = 0.0f \r\n    var lastTB = 0.0f\r\n    var lastSP = 0.0f\r\n    var enemySpeed = 0.5f\r\n    var enemySpeedStack = 1.0f\r\n    var enemyCount = 1\r\n    var speed = 20.0f\r\n    var cooldown = 0.25f\r\n    var letGo = true\r\n    override fun control (\r\n      dt : Float,\r\n      t : Float,\r\n      keysPressed : Set<String>,\r\n      gameObjects : List<GameObject>\r\n      ) : Boolean {\r\n\r\n        //+ (maxOf(2*(enemyCount - 3), 0))\r\n        if (t - lastT > 3){\r\n        //if (t - lastT > 3){\r\n          for (i in 1..enemyCount){\r\n            chase(enemySpeed)\r\n          }\r\n          lastT = t\r\n          enemySpeed += enemySpeedStack\r\n          if (enemySpeed / 5 > enemyCount){\r\n            enemyCount += 1\r\n            //score += 25\r\n          }\r\n        }\r\n\r\n        if (t - lastTB > 15){\r\n          bounce()\r\n          lastTB = t\r\n        }\r\n\r\n        if (t - lastSP > 1){\r\n          val powerChance = Random.nextFloat() * 30\r\n\r\n          if (powerChance <= 14.0f && powerChance >= 13.0f){\r\n            val typeChance = Random.nextFloat() * 30\r\n            if (typeChance < 20){\r\n              speedPowerup(15.0f, 15.0f)\r\n            }\r\n            else {\r\n              bulletPowerup(-15.0f, -15.0f)\r\n            }\r\n\r\n          }\r\n\r\n          lastSP = t\r\n        }\r\n\r\n        if(\"A\" in keysPressed) \r\n        {\r\n          horizantal_force = -1 * speed - (speedBoost * 5.0f)\r\n        }\r\n        else if (\"D\" in keysPressed) {\r\n          horizantal_force = speed + (speedBoost * 5.0f)\r\n        }\r\n        else {\r\n          horizantal_force = 0.0f\r\n        }\r\n\r\n        if((\"W\" in keysPressed || \"SPACE\" in keysPressed) && position.y <= -8.0f) \r\n        {\r\n          velocity.y = 50.0f\r\n          hit_ground = false\r\n          if (horizantal_force > 0.0f){\r\n            torque = -30.0f\r\n          }\r\n          else {\r\n            torque = 30.0f\r\n          }\r\n        }\r\n\r\n        if ((\"O\" in keysPressed || \"P\" in keysPressed) && letGo){\r\n          console.log(speedBoost)\r\n          console.log(bullets)\r\n          letGo = false\r\n          if (t - lastT > cooldown){\r\n          //if (t - lastT > cooldown){\r\n            if (\"O\" in keysPressed){\r\n              for (i in 1..bullets){\r\n                fire(-1.5f)\r\n              }\r\n            }\r\n            else{\r\n              for (i in 1..bullets){\r\n                fire(1.5f)\r\n              }\r\n            }\r\n            lastT = t\r\n          }\r\n        }\r\n\r\n        if (!(\"P\" in keysPressed || \"O\" in keysPressed)){\r\n          letGo = true\r\n        }\r\n\r\n        if (position.y <= -8.0f){\r\n          if (!hit_ground && jump_force < 0.0f){\r\n            hit_ground = true \r\n            jump_force = 0.0f\r\n            acceleration.y = 0.0f \r\n            velocity.y = 0.0f \r\n            position.y = -8.0f\r\n            torque = 0.0f\r\n            angularVelocity = 0.0f \r\n            angularAcceleration = 0.0f\r\n          }\r\n          else if (hit_ground){\r\n            if(\"A\" in keysPressed) \r\n            {\r\n              torque = 10.0f + (speedBoost * 2.5f)\r\n            }\r\n            else if(\"D\" in keysPressed) \r\n            {\r\n              torque = -10.0f - (speedBoost * 2.5f)\r\n            }\r\n            else {\r\n              torque = 0.0f\r\n            }\r\n          }\r\n        }\r\n        else{\r\n          jump_force += gravity\r\n        }\r\n\r\n        if (position.y <= -8.001f){\r\n          position.y = -8.0f\r\n        }\r\n\r\n        if (position.x > 124.0f){\r\n          position.x = 124.0f\r\n        }\r\n        else if (position.x < -124.5f){\r\n          position.x = -124.5f\r\n        }\r\n\r\n        var walk = Vec3(horizantal_force, jump_force, 0.0f)\r\n        force.set(walk)\r\n\r\n        var speedDisp = speedBoost + 1\r\n\r\n        val overlay = document.getElementById(\"overlay\") as HTMLDivElement\r\n        overlay.innerHTML = \"\"\"<font color=\"red\" style=\"font-size: 36px; font-family: 'Comic Sans MS', sans-serif; position: fixed; bottom: 10px; left: 15px;\">Round: $enemyCount<br></font>\r\n                               <font color=\"red\" style=\"font-size: 36px; font-family: 'Comic Sans MS', sans-serif; position: fixed; bottom: 110px; right: 15px;\">$health ♡</font>\r\n                               <font color=\"red\" style=\"font-size: 36px; font-family: 'Comic Sans MS', sans-serif; position: fixed; bottom: 60px; right: 15px;\">Speed: $speedDisp</font>\r\n                               <font color=\"red\" style=\"font-size: 36px; font-family: 'Comic Sans MS', sans-serif; position: fixed; bottom: 10px; right: 15px;\">Multishot x$bullets</font>\"\"\"\r\n\r\n        return true\r\n      }\r\n  }\r\n  init {\r\n    gameObjects += GameObject(backgroundMesh)\r\n    gameObjects += avatar\r\n    avatar.roll = 1f\r\n    avatar.health = 3\r\n    avatar.damage = 1\r\n    avatar.name = \"justin\"\r\n    chase(0.0f)\r\n    bounce()\r\n    bounce()\r\n  }\r\n\r\n  \r\n  fun chase(speedBoost : Float){\r\n    val item = object : PhysicsGameObject(itemMesh){\r\n    //var forceX = Random.nextFloat() * 30 - 15\r\n    //var forceY = Random.nextFloat() * 30 - 15\r\n    var forceX = 0.0f\r\n    var forceY = 0.0f\r\n    var chaseSpeed = 20.0f + speedBoost\r\n    var lastRoll = 0.0f\r\n    override fun control (\r\n      dt : Float,\r\n      t : Float,\r\n      keysPressed : Set<String>,\r\n      gameObjects : List<GameObject>\r\n      ) : Boolean {\r\n\r\n        val directionX = avatar.position.x - position.x\r\n        val directionY = avatar.position.y - position.y\r\n\r\n        \r\n        val distance = sqrt((directionX * directionX + directionY * directionY))\r\n\r\n       \r\n        if (distance > 0) { \r\n            forceX = (directionX / distance) * chaseSpeed\r\n            forceY = (directionY / distance) * chaseSpeed\r\n        }\r\n\r\n        force.set(Vec3(forceX, forceY, 0.0f))\r\n        roll = atan(forceY/forceX)\r\n        //roll = (atan(forceY/forceX) + lastRoll) / 2\r\n        //lastRoll = atan(forceY/forceX)\r\n\r\n        if (position.y < -8.0f){\r\n            forceY *= -1.0f\r\n            velocity.y *= -1.0f\r\n        }\r\n        else if (position.y > 10.0f){\r\n            forceY *= -1.0f\r\n            velocity.y *= -1.0f\r\n        }\r\n\r\n        /*if (position.x > 17.0f){\r\n          forceX *= -1.0f\r\n          velocity.x *= -1.0f\r\n        }\r\n        else if (position.x < -16.5f){\r\n          forceX *= -1.0f\r\n          velocity.x *= -1.0f\r\n        }*/\r\n\r\n        if (position.y < -8.05f){\r\n          position.y = -8.0f\r\n        }\r\n        if (position.y > 10.05f){\r\n          position.y = 10.0f\r\n        }\r\n\r\n        if (position.x > 124.0f){\r\n          position.x = 124.0f\r\n        }\r\n        else if (position.x < -124.5f){\r\n          position.x = -124.5f\r\n        }\r\n\r\n        val move = Vec3(forceX, forceY, 0.0f)\r\n        force.set(move)\r\n\r\n        return true\r\n      }\r\n    }\r\n  \r\n    val initPos = Random.nextFloat() * 32 - 17\r\n    console.log(\"just added\")\r\n    gameObjects += item\r\n    item.position.set(Vec3(initPos, 9.0f, 0.0f))\r\n    item.health = 3\r\n    item.damage = 1\r\n    item.name = \"milk\"\r\n  }\r\n\r\n  fun bounce(){\r\n    val b = object : PhysicsGameObject(bounceMesh){\r\n    var forceX = Random.nextFloat() * 10 - 5\r\n    var forceY = Random.nextFloat() * 10 - 5\r\n    override fun control (\r\n      dt : Float,\r\n      t : Float,\r\n      keysPressed : Set<String>,\r\n      gameObjects : List<GameObject>\r\n      ) : Boolean {\r\n\r\n        // Set the calculated force\r\n        force.set(Vec3(forceX, forceY, 0.0f))\r\n\r\n        if (position.y < -8.0f){\r\n            forceY *= -1.0f\r\n            velocity.y *= -1.0f\r\n        }\r\n        else if (position.y > 10.0f){\r\n            forceY *= -1.0f\r\n            velocity.y *= -1.0f\r\n        }\r\n\r\n        /*if (position.x > 17.0f){\r\n          forceX *= -1.0f\r\n          velocity.x *= -1.0f\r\n        }\r\n        else if (position.x < -16.5f){\r\n          forceX *= -1.0f\r\n          velocity.x *= -1.0f\r\n        }*/\r\n\r\n        if (position.y < -8.05f){\r\n          position.y = -8.0f\r\n        }\r\n        if (position.y > 10.05f){\r\n          position.y = 10.0f\r\n        }\r\n\r\n        if (position.x > 124.0f){\r\n          position.x = 124.0f\r\n        }\r\n        else if (position.x < -124.5f){\r\n          position.x = -124.5f\r\n        }\r\n\r\n        val move = Vec3(forceX, forceY, 0.0f)\r\n        force.set(move)\r\n\r\n        return true\r\n      }\r\n    }\r\n  \r\n    val initPos = (Random.nextFloat() - 0.5f) * 30 + avatar.position.x \r\n    console.log(\"just added\")\r\n    gameObjects += b\r\n    b.position.set(Vec3(initPos, 0.0f, 0.0f))\r\n    b.health = 3\r\n    b.damage = -1\r\n    b.name = \"cheese\"\r\n  }\r\n\r\nfun speedPowerup(i_X : Float, i_Y : Float){\r\n    val b = object : PhysicsGameObject(speedMesh){\r\n    var forceX = i_X\r\n    var forceY = i_Y\r\n    override fun control (\r\n      dt : Float,\r\n      t : Float,\r\n      keysPressed : Set<String>,\r\n      gameObjects : List<GameObject>\r\n      ) : Boolean {\r\n\r\n        // Set the calculated force\r\n        force.set(Vec3(forceX, forceY, 0.0f))\r\n\r\n        if (position.y < -8.0f){\r\n            forceY *= -1.0f\r\n            velocity.y *= -1.0f\r\n        }\r\n        else if (position.y > 10.0f){\r\n            forceY *= -1.0f\r\n            velocity.y *= -1.0f\r\n        }\r\n\r\n        /*if (position.x > 17.0f){\r\n          forceX *= -1.0f\r\n          velocity.x *= -1.0f\r\n        }\r\n        else if (position.x < -16.5f){\r\n          forceX *= -1.0f\r\n          velocity.x *= -1.0f\r\n        }*/\r\n\r\n        if (position.y < -8.05f){\r\n          position.y = -8.0f\r\n        }\r\n        if (position.y > 10.05f){\r\n          position.y = 10.0f\r\n        }\r\n\r\n        if (position.x > 124.0f){\r\n          position.x = 124.0f\r\n        }\r\n        else if (position.x < -124.5f){\r\n          position.x = -124.5f\r\n        }\r\n\r\n        val move = Vec3(forceX, forceY, 0.0f)\r\n        force.set(move)\r\n\r\n        return true\r\n      }\r\n    }\r\n  \r\n    val initPos = Random.nextFloat() * 32 - 17\r\n    console.log(\"just added\")\r\n    gameObjects += b\r\n    b.position.set(Vec3(initPos, 0.0f, 0.0f))\r\n    b.health = 1\r\n    b.damage = 0\r\n    b.name = \"ramsey\"\r\n  }\r\n\r\n  fun bulletPowerup(i_X : Float, i_Y : Float){\r\n    val b = object : PhysicsGameObject(bulletMesh){\r\n    var forceX = i_X\r\n    var forceY = i_Y\r\n    override fun control (\r\n      dt : Float,\r\n      t : Float,\r\n      keysPressed : Set<String>,\r\n      gameObjects : List<GameObject>\r\n      ) : Boolean {\r\n\r\n        // Set the calculated force\r\n        force.set(Vec3(forceX, forceY, 0.0f))\r\n\r\n        if (position.y < -8.0f){\r\n            forceY *= -1.0f\r\n            velocity.y *= -1.0f\r\n        }\r\n        else if (position.y > 10.0f){\r\n            forceY *= -1.0f\r\n            velocity.y *= -1.0f\r\n        }\r\n\r\n        /*if (position.x > 17.0f){\r\n          forceX *= -1.0f\r\n          velocity.x *= -1.0f\r\n        }\r\n        else if (position.x < -16.5f){\r\n          forceX *= -1.0f\r\n          velocity.x *= -1.0f\r\n        }*/\r\n\r\n        if (position.y < -8.05f){\r\n          position.y = -8.0f\r\n        }\r\n        if (position.y > 10.05f){\r\n          position.y = 10.0f\r\n        }\r\n\r\n        if (position.x > 124.0f){\r\n          position.x = 124.0f\r\n        }\r\n        else if (position.x < -124.5f){\r\n          position.x = -124.5f\r\n        }\r\n\r\n        val move = Vec3(forceX, forceY, 0.0f)\r\n        force.set(move)\r\n\r\n        return true\r\n      }\r\n    }\r\n  \r\n    val initPos = Random.nextFloat() * 32 - 17\r\n    console.log(\"just added\")\r\n    gameObjects += b\r\n    b.position.set(Vec3(initPos, 0.0f, 0.0f))\r\n    b.health = 1\r\n    b.damage = 0\r\n    b.name = \"ritvik\"\r\n  }\r\n\r\n\r\n  /*val asteroid = PhysicsGameObject(asteroidMesh).apply {\r\n    position.set(1.0f, 0.0f, 0.0f)\r\n    scale.set(1.0f, 1.0f, 1.0f)\r\n    radius = 1.0f\r\n  }\r\n  init {\r\n    gameObjects += asteroid\r\n  }*/\r\n\r\n  /*val asteroid2 = PhysicsGameObject(asteroidMesh).apply {\r\n    position.set(1.0f, 2.0f, 0.0f)\r\n    scale.set(2.0f, 2.0f, 1.0f)\r\n    radius = 2.0f\r\n    invMass = 0.0f\r\n    invAngularMass = 0.0f\r\n  }\r\n  init {\r\n    gameObjects += asteroid2\r\n  }*/\r\n\r\n  fun fire(direc : Float){\r\n    val missile = object : PhysicsGameObject(shootMesh){\r\n      override fun control (\r\n      dt : Float,\r\n      t : Float,\r\n      keysPressed : Set<String>,\r\n      gameObjects : List<GameObject>\r\n      ) : Boolean {\r\n        var f = Vec3(50.0f, 0.0f, 0.0f)\r\n        if (direc < 0){\r\n          f = Vec3(-50.0f, 0.0f, 0.0f)\r\n        }\r\n        force.set(f)\r\n\r\n\r\n        //avoid lag\r\n        if (position.x > 154.0f){\r\n          health = 0\r\n        }\r\n        else if (position.x < -154.5f){\r\n          health = 0\r\n        }\r\n\r\n        return true\r\n      }\r\n    }\r\n\r\n    missile.position.set(Vec3(avatar.position.x + direc, avatar.position.y, 0.0f))\r\n    if (direc > 0){\r\n      missile.velocity.set(Vec3(abs(avatar.velocity.x) + 25.0f, 0.0f, 0.0f))\r\n    }\r\n    else{\r\n      missile.velocity.set(Vec3(-1 * abs(avatar.velocity.x) - 25.0f, 0.0f, 0.0f))\r\n    }\r\n    \r\n    missile.damage = 3 \r\n    missile.name = \"missile\"\r\n    gameObjects += missile\r\n  }\r\n\r\n  fun resize(canvas : HTMLCanvasElement) {\r\n    gl.viewport(0, 0, canvas.width, canvas.height)//#viewport# tell the rasterizer which part of the canvas to draw to ˙HUN˙ a raszterizáló ide rajzoljon\r\n    camera.setAspectRatio(canvas.width.toFloat()/canvas.height)\r\n  }\r\n\r\n  val timeAtFirstFrame = Date().getTime()\r\n  var timeAtLastFrame =  timeAtFirstFrame\r\n  //TODO: add property reflecting uniform scene.time\r\n  //TODO: add all programs as child components\r\n\r\n  @Suppress(\"UNUSED_PARAMETER\")\r\n  fun update(keysPressed : Set<String>) {\r\n    val timeAtThisFrame = Date().getTime() \r\n    val dt = (timeAtThisFrame - timeAtLastFrame).toFloat() / 1000.0f\r\n    val t = (timeAtThisFrame - timeAtFirstFrame).toFloat() / 1000.0f\r\n    //TODO: set property time (reflecting uniform scene.time) \r\n    timeAtLastFrame = timeAtThisFrame\r\n    \r\n    camera.position.set(Vec3(avatar.position.x, 0.0f, 0.0f))\r\n    camera.updateViewProjMatrix()\r\n\r\n    gl.clearColor(0.3f, 0.0f, 0.3f, 1.0f)//## red, green, blue, alpha in [0, 1]\r\n    gl.clearDepth(1.0f)//## will be useful in 3D ˙HUN˙ 3D-ben lesz hasznos\r\n    gl.clear(GL.COLOR_BUFFER_BIT or GL.DEPTH_BUFFER_BIT)//#or# bitwise OR of flags\r\n\r\n    gl.enable(GL.BLEND)\r\n    gl.blendFunc(\r\n      GL.SRC_ALPHA,\r\n      GL.ONE_MINUS_SRC_ALPHA)\r\n\r\n    gameObjects.forEach{\r\n      it.move(dt, t, keysPressed, gameObjects)\r\n    }\r\n    gameObjects.forEach{\r\n      it.update()\r\n      if (it is PhysicsGameObject && it.alive == false){\r\n        console.log(\"remove\")\r\n        gameObjects.remove(it)\r\n      }\r\n    }\r\n    gameObjects.forEach{\r\n      it.draw(this, camera)\r\n    }\r\n  }\r\n}\r\n",null,null,"import kotlin.browser.document\r\nimport kotlin.browser.window\r\nimport org.w3c.xhr.XMLHttpRequest\r\nimport org.w3c.dom.events.*\r\nimport org.w3c.dom.HTMLScriptElement\r\nimport org.khronos.webgl.WebGLRenderingContext as GL\r\n\r\nclass Shader (\r\n  val gl : WebGL2RenderingContext,\r\n  val shaderType : Int,\r\n  val sourceUrl : String) {\r\n\r\n  val glShader = gl.createShader(shaderType) //#createShader# get an OpenGL shader ID #shaderType# vertex or fragment shader\r\n\r\n  init {\r\n    val request = XMLHttpRequest()\r\n    request.overrideMimeType(\"text/plain\")\r\n    request.open(\"GET\", sourceUrl, false)\r\n    var errorMessage : String? = null\r\n    request.onloadend = {\r\n      val source = request.responseText\r\n      if(source == \"\"){\r\n        errorMessage = \"${sourceUrl} is empty.\"\r\n      } else {\r\n        val marked = Regex(\"[^\" + '\\u0000' + \"-\" + '\\u007F'+ \"]\").replace(source) {\r\n          match -> '\\u001b' + \"[46m\" + match.value + '\\u001b' + \"[31m\" }\r\n        if(marked != source) {\r\n          errorMessage = \"Shader source file ${sourceUrl} has \\u001b[46mnon-ASCII\\u001b[31m characters.\\n\" + marked\r\n        } else {\r\n          gl.shaderSource(glShader, source) //#shaderSource# associate source code with ID\r\n          gl.compileShader(glShader) //#compileShader# compile GLSL code to binary\r\n          if (gl.getShaderParameter(glShader, GL.COMPILE_STATUS) == false) {\r\n            val errorPrefix = Regex(\"ERROR: 0\")\r\n            errorMessage = \"Shader ${sourceUrl} had compilation errors.\\n${errorPrefix.replace(gl.getShaderInfoLog(glShader)?:\"FAILED TO OBTAIN LOG.\", request.responseURL)}\" //#getShaderInfoLog# check if succeeded and get compilation error message\r\n          }\r\n        }\r\n      }\r\n    } \r\n    request.send()\r\n    if(errorMessage != null){\r\n        throw Error(errorMessage)\r\n    }\r\n  }\r\n}\r\n",null,"import org.khronos.webgl.WebGLRenderingContext as GL\r\nimport org.khronos.webgl.WebGLTexture\r\nimport org.w3c.dom.Image\r\nimport org.w3c.dom.events.Event\r\nimport vision.gears.webglmath.Texture\r\n\r\nclass Texture2D(\r\n  gl : WebGL2RenderingContext,\r\n  val mediaFileUrl : String\r\n  ) : Texture {\r\n  override val glTexture : WebGLTexture? = gl.createTexture()\r\n  init {\r\n    val image = Image()\r\n    image.onload = {\r\n      gl.bindTexture(GL.TEXTURE_2D, glTexture)\r\n      gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, image) \r\n      gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.LINEAR) \r\n      gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR_MIPMAP_LINEAR) \r\n      gl.generateMipmap(GL.TEXTURE_2D); \r\n      gl.bindTexture(GL.TEXTURE_2D, null); \r\n    }\r\n    image.src = mediaFileUrl\r\n  }\r\n}","import org.khronos.webgl.WebGLRenderingContext as GL\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.Uint16Array\r\nimport vision.gears.webglmath.Geometry\r\n\r\nclass TexturedQuadGeometry(val gl : WebGL2RenderingContext) : Geometry() {\r\n   \r\n  val vertexBuffer = gl.createBuffer()\r\n  init{\r\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer)\r\n    gl.bufferData(GL.ARRAY_BUFFER,\r\n      Float32Array( arrayOf<Float>(\r\n        -1.0f, -1.0f, 0.5f,\r\n        -1.0f,  1.0f, 0.5f,\r\n         1.0f, -1.0f, 0.5f,\r\n         1.0f,  1.0f, 0.5f\r\n      )),\r\n      GL.STATIC_DRAW)\r\n  }\r\n\r\n  val vertexNormalBuffer = gl.createBuffer()\r\n  init{\r\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexNormalBuffer)\r\n    gl.bufferData(GL.ARRAY_BUFFER,\r\n      Float32Array( arrayOf<Float>(\r\n         0.0f,  0.0f, 1.0f,\r\n         0.0f,  0.0f, 1.0f,\r\n         0.0f,  0.0f, 1.0f,\r\n         0.0f,  0.0f, 1.0f\r\n      )),\r\n      GL.STATIC_DRAW)\r\n  }\r\n\r\n  val vertexTexCoordBuffer = gl.createBuffer()\r\n  init{\r\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexTexCoordBuffer)\r\n    gl.bufferData(GL.ARRAY_BUFFER,\r\n      Float32Array( arrayOf<Float>(\r\n         0.0f,  1.0f, \r\n         0.0f,  0.0f, \r\n         1.0f,  1.0f, \r\n         1.0f,  0.0f\r\n         )),\r\n      GL.STATIC_DRAW)\r\n  }    \r\n\r\n  val indexBuffer = gl.createBuffer()\r\n  init{\r\n    gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n    gl.bufferData(GL.ELEMENT_ARRAY_BUFFER,\r\n      Uint16Array( arrayOf<Short>(\r\n        0, 1, 2,\r\n        1, 2, 3\r\n      )),\r\n      GL.STATIC_DRAW)\r\n  }\r\n\r\n  val inputLayout = gl.createVertexArray()\r\n  init{\r\n    gl.bindVertexArray(inputLayout)\r\n\r\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer)\r\n    gl.enableVertexAttribArray(0)\r\n    gl.vertexAttribPointer(0,\r\n      3, GL.FLOAT, //< three pieces of float\r\n      false, //< do not normalize (make unit length)\r\n      0, //< tightly packed\r\n      0 //< data starts at array start\r\n    )\r\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexNormalBuffer)\r\n    gl.enableVertexAttribArray(1)\r\n    gl.vertexAttribPointer(1,\r\n      3, GL.FLOAT, //< three pieces of float\r\n      false, //< do not normalize (make unit length)\r\n      0, //< tightly packed\r\n      0 //< data starts at array start\r\n    )\r\n    gl.bindBuffer(GL.ARRAY_BUFFER, vertexTexCoordBuffer)\r\n    gl.enableVertexAttribArray(2)\r\n    gl.vertexAttribPointer(2,\r\n      2, GL.FLOAT, //< two pieces of float\r\n      false, //< do not normalize (make unit length)\r\n      0, //< tightly packed\r\n      0 //< data starts at array start\r\n    )    \r\n    gl.bindVertexArray(null)\r\n  }\r\n\r\n  override fun draw() {\r\n    gl.bindVertexArray(inputLayout)\r\n    gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, indexBuffer)  \r\n\r\n    gl.drawElements(GL.TRIANGLES, 6, GL.UNSIGNED_SHORT, 0)\r\n  }\r\n}",null,"package vision.gears.webglmath\r\n\r\nabstract class Drawable {\r\n  open fun gatherUniforms(target : UniformProvider){}\r\n  abstract fun draw(vararg uniformProviders : UniformProvider)\r\n  open fun drawWithOverrides(overrides : Map<String, UniformProvider>, vararg uniformProviders : UniformProvider){\r\n    draw(*uniformProviders)\r\n  }\r\n}\r\n","package vision.gears.webglmath\r\n\r\nabstract class Geometry : Drawable() {\r\n\tabstract fun draw()\r\n\r\n  final override fun draw(vararg uniformProviders : UniformProvider){\r\n  \tdraw()\r\n  }\r\n\r\n  // This implementation is identical to Drawable::drawWithOverrides. Is there a way to make the method final withot overriding it?\r\n  final override fun drawWithOverrides(overrides : Map<String, UniformProvider>, vararg uniformProviders : UniformProvider) {\r\n  \tdraw(*uniformProviders)\r\n\t}\r\n  // This empty implementation is identical to Drawable::drawWithOverrides. Is there a way to make the method final withot overriding it?\r\n  final override fun gatherUniforms(target : UniformProvider){}\r\n}\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass IVec1(backingStorage: Int32Array?, offset: Int = 0) : UniformInt {\r\n\r\n  constructor(u: Int = 0) : this(null, 0){\r\n    storage[0] = u\r\n  }\r\n  constructor(other : IVec1) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Int32Array = backingStorage?.subarray(offset, offset+1)?:Int32Array(1)\r\n  inline var x : Int\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline val xx : IVec2\r\n    get() = IVec2(storage[0], storage[0])\r\n  inline val xxx : IVec3\r\n    get() = IVec3(storage[0], storage[0], storage[0])\r\n  inline val xxxx : IVec4\r\n    get() = IVec4(storage[0], storage[0], storage[0], storage[0])\r\n\r\n  inline fun clone() : IVec1 {\r\n    return IVec1(this)\r\n  }\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec1 {\r\n    storage[0] = firstValue\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = IVec1()\r\n    val ones = IVec1(1)\r\n  }\r\n\r\n  inline fun clamp(minVal: IVec1 = IVec1.zeros, maxVal: IVec1 = IVec1.ones) : IVec1 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : IVec1 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun times(scalar : Int) : IVec1 {\r\n    return IVec1(\r\n      storage[0] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Int) : IVec1 {\r\n    return IVec1(\r\n      storage[0] / scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Int) {\r\n    storage[0] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Int) {\r\n    storage[0] /= scalar\r\n  }    \r\n\r\n  operator inline fun plusAssign(other : IVec1) {\r\n    storage[0] += other.storage[0]\r\n  }\r\n\r\n  operator inline fun plus(other : IVec1) : IVec1 {\r\n    return IVec1(\r\n      storage[0] + other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : IVec1) {\r\n    storage[0] -= other.storage[0]\r\n  }\r\n\r\n  operator inline fun minus(other : IVec1) : IVec1 {\r\n    return IVec1(\r\n      storage[0] - other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : IVec1) {\r\n    storage[0] *= other.storage[0]\r\n  }\r\n\r\n  operator inline fun times(other : IVec1) : IVec1 {\r\n    return IVec1(\r\n      storage[0] * other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : IVec1) {\r\n    storage[0] /= other.storage[0]\r\n  }\r\n\r\n  operator inline fun div(other : IVec1) : IVec1 {\r\n    return IVec1(\r\n      storage[0] / other.storage[0]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Int {\r\n    return storage[0] * storage[0]\r\n  }\r\n\r\n  inline fun length() : Int {\r\n    return storage[0]\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec1 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec1 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec1) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform1iv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.times(v: IVec1) = IVec1(this * v.storage[0])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.div(v: IVec1) = IVec1(this / v.storage[0])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\n\r\nclass IVec1Array(backingStorage: Int32Array?, startIndex: Int = 0, endIndex: Int = 0) : IVecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex, endIndex)?:Int32Array(startIndex)\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec1Array {\r\n    storage[0] = firstValue\r\n    for(i in 1 until storage.length) {\r\n      storage[i] = values.getOrNull(i-1) ?: 0\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : IVec1{\r\n    return IVec1(storage, i)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : IVec1Array {\r\n    return IVec1Array(storage, begin, end)\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec1Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec1Array {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec1Array) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform1iv(uniformLocation, storage);\r\n  }\r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass IVec2(backingStorage: Int32Array?, offset: Int = 0) : UniformInt {\r\n\r\n  constructor(u: Int = 0, v: Int = 0) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n  }\r\n  constructor(other : IVec1, v: Int = 0) : this(other.storage[0], v ){}\r\n  constructor(other : IVec2) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Int32Array = backingStorage?.subarray(offset, offset+2)?:Int32Array(2)\r\n  inline var x : Int\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Int\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline val xy0 : IVec3\r\n    get() = IVec3(storage[0], storage[1], 0)\r\n  inline val xy00 : IVec4\r\n    get() = IVec4(storage[0], storage[1], 0, 0)    \r\n  inline val xy01 : IVec4\r\n    get() = IVec4(storage[0], storage[1], 0, 1)\r\n\r\n  inline fun clone() : IVec2 {\r\n    return IVec2(this)\r\n  }\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec2 {\r\n    storage[0] = firstValue\r\n    storage[1] = values.getOrElse(0) {0}\r\n    return this\r\n  }\r\n\r\n  companion object {\r\n    val zeros = IVec2()\r\n    val ones = IVec2(1, 1) \r\n\r\n    inline fun makeRandom(minVal: IVec2 = IVec2.zeros, maxVal: IVec2 = IVec2.ones) : IVec2 {\r\n      return IVec2(\r\n          Random.nextInt() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextInt() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1]\r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Int = 0, maxVal: Int = 1) : IVec2 {\r\n      return IVec2.makeRandom(IVec2(minVal, minVal), IVec2(maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: IVec2 = IVec2.zeros, maxVal: IVec2 = IVec2.ones){\r\n    set(IVec2.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Int = 0, maxVal: Int = 1){\r\n    randomize(IVec2(minVal, minVal), IVec2(maxVal, maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: IVec2 = IVec2.zeros, maxVal: IVec2 = IVec2.ones) : IVec2 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : IVec2 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : IVec2 {\r\n    return IVec2(-storage[0], -storage[1])\r\n  }\r\n\r\n  operator inline fun times(scalar : Int) : IVec2 {\r\n    return IVec2(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Int) : IVec2 {\r\n    return IVec2(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Int) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Int) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n  }\r\n\r\n  operator inline fun plusAssign(other : IVec2) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n  }\r\n\r\n  operator inline fun plus(other : IVec2) : IVec2 {\r\n    return IVec2(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : IVec2) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n  }\r\n\r\n  operator inline fun minus(other : IVec2) : IVec2 {\r\n    return IVec2(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : IVec2) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n  }\r\n\r\n  operator inline fun times(other : IVec2) : IVec2 {\r\n    return IVec2(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : IVec2) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n  }\r\n\r\n  operator inline fun div(other : IVec2) : IVec2 {\r\n    return IVec2(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Int {\r\n    return storage[0] * storage[0] + storage[1] * storage[1]\r\n  }\r\n\r\n  infix inline fun dot(other : IVec2) : Int {\r\n    return (\r\n     storage[0] * other.storage[0] +\r\n     storage[1] * other.storage[1] )\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec2 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec2 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec2) {\r\n    set(value)\r\n  }\r\n  \r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform2iv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.times(v: IVec2) = IVec2(this * v.storage[0], this * v.storage[1])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.div(v: IVec2) = IVec2(this / v.storage[0], this / v.storage[1])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass IVec3(backingStorage: Int32Array?, offset: Int = 0) : UniformInt {\r\n\r\n  constructor(u: Int = 0, v: Int = 0, s: Int = 0) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n    storage[2] = s\r\n  }\r\n  constructor(other : IVec1, v: Int = 0, s: Int = 0) : this(other.storage[0], v, s){}\r\n  constructor(other : IVec2, s: Int = 0) : this(other.storage[0], other.storage[1], s){}\r\n  constructor(other : IVec3) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n  constructor(other : IVec4) : this(other.storage[0]/other.storage[3], other.storage[1]/other.storage[3], other.storage[2]/other.storage[3]){}\r\n\r\n  override val storage: Int32Array = backingStorage?.subarray(offset, offset+3)?:Int32Array(3)\r\n  inline var x : Int\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Int\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline var z : Int\r\n    get() = storage[2]\r\n    set(value) { storage[2] = value }\r\n  inline var xy : IVec2\r\n    get() = IVec2(storage)\r\n    set(value) { IVec2(storage).set(value) }\r\n  inline val xyz0 : IVec4\r\n    get() = IVec4(storage[0], storage[1], storage[2], 0)    \r\n  inline val xyz1 : IVec4\r\n    get() = IVec4(storage[0], storage[1], storage[2], 1)\r\n\r\n  inline fun clone() : IVec3 {\r\n    return IVec3(this)\r\n  }\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec3 {\r\n    storage[0] = firstValue\r\n    storage[1] = values.getOrElse(0) {0}\r\n    storage[2] = values.getOrElse(1) {0}    \r\n    return this\r\n  }\r\n\r\n  companion object {\r\n    val zeros = IVec3()\r\n    val ones = IVec3(1, 1, 1) \r\n\r\n    inline fun makeRandom(minVal: IVec3 = IVec3.zeros, maxVal: IVec3 = IVec3.ones) : IVec3 {\r\n      return IVec3(\r\n          Random.nextInt() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextInt() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1],\r\n          Random.nextInt() * (maxVal.storage[2] - minVal.storage[2]) + minVal.storage[2]                    \r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Int = 0, maxVal: Int = 1) : IVec3 {\r\n      return IVec3.makeRandom(IVec3(minVal, minVal, minVal), IVec3(maxVal, maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: IVec3 = IVec3.zeros, maxVal: IVec3 = IVec3.ones){\r\n    set(IVec3.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Int = 0, maxVal: Int = 1){\r\n    randomize(IVec3(minVal, minVal, minVal), IVec3(maxVal, maxVal, maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: IVec3 = IVec3.zeros, maxVal: IVec3 = IVec3.ones) : IVec3 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[2] < minVal.storage[2]){\r\n      storage[2] = minVal.storage[2]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    if(storage[2] > maxVal.storage[2]){\r\n      storage[2] = maxVal.storage[2]\r\n    }        \r\n    return this\r\n  }\r\n\r\n  operator inline fun get(index : Int) : Int {\r\n    return storage[index]\r\n  }\r\n\r\n  operator fun set(index: Int, value: Int) {\r\n    storage[index] = value \r\n  }  \r\n\r\n  operator inline fun unaryPlus() : IVec3 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : IVec3 {\r\n    return IVec3(-storage[0], -storage[1], -storage[2])\r\n  }\r\n\r\n  operator inline fun times(scalar : Int) : IVec3 {\r\n    return IVec3(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar,\r\n      storage[2] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Int) : IVec3 {\r\n    return IVec3(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar,\r\n      storage[2] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Int) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n    storage[2] *= scalar    \r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Int) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n    storage[2] /= scalar\r\n  }\r\n\r\n  operator inline fun plusAssign(other : IVec3) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n    storage[2] += other.storage[2]\r\n  }\r\n\r\n  operator inline fun plus(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1],\r\n      storage[2] + other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : IVec3) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n    storage[2] -= other.storage[2]\r\n  }\r\n\r\n  operator inline fun minus(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1],\r\n      storage[2] - other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : IVec3) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n    storage[2] *= other.storage[2]\r\n  }\r\n\r\n  operator inline fun times(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1],\r\n      storage[2] * other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : IVec3) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n    storage[2] /= other.storage[2]\r\n  }\r\n\r\n  operator inline fun div(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1],\r\n      storage[2] / other.storage[2]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Int {\r\n    return storage[0] * storage[0] + storage[1] * storage[1] + storage[2] * storage[2]\r\n  }\r\n\r\n  infix inline fun dot(other : IVec3) : Int {\r\n    return (\r\n      storage[0] * other.storage[0] +\r\n      storage[1] * other.storage[1] +\r\n      storage[2] * other.storage[2] )\r\n  }\r\n\r\n  infix inline fun cross(other : IVec3) : IVec3 {\r\n    return IVec3(\r\n      storage[1] * other.storage[2] - storage[2] * other.storage[1],\r\n      storage[2] * other.storage[0] - storage[0] * other.storage[2],\r\n      storage[0] * other.storage[1] - storage[1] * other.storage[0])\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec3 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec3 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec3) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform3iv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.times(v: IVec3) = IVec3(v.x * this, v.y * this, v.z * this)\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.div(v: IVec3) = IVec3(this / v.x, this / v.y, this / v.z)","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass IVec4(backingStorage: Int32Array?, offset: Int = 0) : UniformInt {\r\n\r\n  constructor(u: Int = 0, v: Int = 0, s: Int = 0, t: Int = 1) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n    storage[2] = s\r\n    storage[3] = t\r\n  }\r\n  constructor(other : IVec1, v: Int = 0, s: Int = 0, w: Int = 1) : this(other.storage[0], v, s, w){}\r\n  constructor(other : IVec2, s: Int = 0, w: Int = 1) : this(other.storage[0], other.storage[1], s, w){}\r\n  constructor(other : IVec3, w: Int = 1) : this(other.storage[0], other.storage[1], other.storage[2], w){}\r\n  constructor(other : IVec4) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Int32Array = backingStorage?.subarray(offset, offset+4)?:Int32Array(4)\r\n  inline var x : Int\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Int\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline var z : Int\r\n    get() = storage[2]\r\n    set(value) { storage[2] = value }\r\n  inline var w : Int\r\n    get() = storage[3]\r\n    set(value) { storage[3] = value }    \r\n  inline var xy : IVec2\r\n    get() = IVec2(storage)\r\n    set(value) { IVec2(storage).set(value) }\r\n  inline var xyz : IVec3\r\n    get() = IVec3(storage)\r\n    set(value) { IVec3(storage).set(value) }\r\n\r\n  inline fun clone() : IVec4 {\r\n    return IVec4(this)\r\n  }\r\n\r\n  override fun set(firstValue : Int, vararg values : Int) : IVec4 {\r\n    storage[0] = firstValue\r\n    storage[1] = values.getOrElse(0) {0}\r\n    storage[2] = values.getOrElse(1) {0}\r\n    storage[3] = values.getOrElse(2) {0}    \r\n    return this\r\n  }\r\n\r\n  companion object {\r\n    val zeros = IVec4(0, 0, 0, 0)\r\n    val ones = IVec4(1, 1, 1, 1) \r\n\r\n    inline fun makeRandom(minVal: IVec4 = IVec4.zeros, maxVal: IVec4 = IVec4.ones) : IVec4 {\r\n      return IVec4(\r\n          Random.nextInt() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextInt() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1],\r\n          Random.nextInt() * (maxVal.storage[2] - minVal.storage[2]) + minVal.storage[2],                    \r\n          Random.nextInt() * (maxVal.storage[3] - minVal.storage[3]) + minVal.storage[3]\r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Int = 0, maxVal: Int = 1) : IVec4 {\r\n      return IVec4.makeRandom(IVec4(minVal, minVal, minVal, minVal), IVec4(maxVal, maxVal, maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun setRandom(minVal: IVec4 = IVec4.zeros, maxVal: IVec4 = IVec4.ones){\r\n    set(IVec4.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun setRandom(minVal: Int = 0, maxVal: Int = 1){\r\n    setRandom(IVec4(minVal, minVal, minVal, minVal), IVec4(maxVal, maxVal, maxVal, minVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: IVec4 = IVec4.zeros, maxVal: IVec4 = IVec4.ones) : IVec4 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[2] < minVal.storage[2]){\r\n      storage[2] = minVal.storage[2]\r\n    }\r\n    if(storage[3] < minVal.storage[3]){\r\n      storage[3] = minVal.storage[3]\r\n    }    \r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    if(storage[2] > maxVal.storage[2]){\r\n      storage[2] = maxVal.storage[2]\r\n    }        \r\n    if(storage[3] > maxVal.storage[3]){\r\n      storage[3] = maxVal.storage[3]\r\n    }            \r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : IVec4 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : IVec4 {\r\n    return IVec4(-storage[0], -storage[1], -storage[2], -storage[3])\r\n  }\r\n\r\n  operator inline fun times(scalar : Int) : IVec4 {\r\n    return IVec4(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar,\r\n      storage[2] * scalar,\r\n      storage[3] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Int) : IVec4 {\r\n    return IVec4(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar,\r\n      storage[2] / scalar,\r\n      storage[3] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Int) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n    storage[2] *= scalar    \r\n    storage[3] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Int) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n    storage[2] /= scalar\r\n    storage[3] /= scalar\r\n  }  \r\n\r\n  operator inline fun plusAssign(other : IVec4) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n    storage[2] += other.storage[2]\r\n    storage[3] += other.storage[3]\r\n  }\r\n\r\n  operator inline fun plus(other : IVec4) : IVec4 {\r\n    return IVec4(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1],\r\n      storage[2] + other.storage[2],\r\n      storage[3] + other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : IVec4) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n    storage[2] -= other.storage[2]\r\n    storage[3] -= other.storage[3]\r\n  }\r\n\r\n  operator inline fun minus(other : IVec4) : IVec4 {\r\n    return IVec4(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1],\r\n      storage[2] - other.storage[2],\r\n      storage[3] - other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : IVec4) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n    storage[2] *= other.storage[2]\r\n    storage[3] *= other.storage[3]\r\n  }\r\n\r\n  operator inline fun times(other : IVec4) : IVec4 {\r\n    return IVec4(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1],\r\n      storage[2] * other.storage[2],\r\n      storage[3] * other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : IVec4) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n    storage[2] /= other.storage[2]\r\n    storage[3] /= other.storage[3]\r\n  }\r\n\r\n  operator inline fun div(other : IVec4) : IVec4 {\r\n    return IVec4(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1],\r\n      storage[2] / other.storage[2],\r\n      storage[3] / other.storage[3]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Int {\r\n    return storage[0] * storage[0] + storage[1] * storage[1] + storage[2] * storage[2] + storage[3] * storage[3]\r\n  }\r\n\r\n  infix inline fun dot(other : IVec4) : Int {\r\n    return (\r\n      storage[0] * other.storage[0] +\r\n      storage[1] * other.storage[1] +\r\n      storage[2] * other.storage[2] +\r\n      storage[3] * other.storage[3] )\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : IVec4 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): IVec4 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: IVec4) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform4iv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.times(v: IVec4) = IVec4(this * v.storage[0], this * v.storage[1], this * v.storage[2], this * v.storage[3])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Int.div(v: IVec4) = IVec4(this / v.storage[0], this / v.storage[1], this / v.storage[2], this / v.storage[3])\r\n","package vision.gears.webglmath\r\n\r\nabstract class IVecArray : UniformInt {\r\n\r\n}\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.math.sqrt\r\nimport kotlin.math.cos\r\nimport kotlin.math.sin\r\n\r\nclass Mat4 (backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(\r\n//    m00 : Float = 1.0f, m01: Float = 0.0f, m02: Float = 0.0f, m03: Float = 0.0f,\r\n//    m10 : Float = 0.0f, m11: Float = 1.0f, m12: Float = 0.0f, m13: Float = 0.0f,\r\n//    m20 : Float = 0.0f, m21: Float = 0.0f, m22: Float = 1.0f, m23: Float = 0.0f,\r\n//    m30 : Float = 0.0f, m31: Float = 0.0f, m32: Float = 0.0f, m33: Float = 1.0f) : this(null, 0){\r\n    vararg elements : Float ) : this(null, 0){\r\n    val allElements = Array<Float>(16) {\r\n      i : Int ->\r\n      elements.getOrNull((i % 4)*4 + i/4)?: if(i%5==0) 1.0f else 0.0f\r\n    }\r\n    storage.set(allElements)\r\n  }\r\n  constructor(other : Mat4) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+16)?:Float32Array(16)\r\n\r\n  fun clone() : Mat4 {\r\n    return Mat4(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float ) : Mat4 {\r\n    val allElements = Array<Float>(16) {\r\n      i : Int ->\r\n      values.getOrNull((i % 4)*4 + i/4)?: if(i%5==0) 1.0f else 0.0f\r\n    }\r\n    storage.set(allElements)\r\n    return this\r\n  }\r\n\r\n  override fun set(other : Uniform) : Mat4{\r\n    if(other is Mat4) {\r\n      storage.set(other.storage)\r\n    } else {\r\n      throw Error(\"A Mat4 cannot be set from a Uniform of another type.\")\r\n    }\r\n    return this\r\n  }  \r\n\r\n  fun fromQuaternion(x : Float, y : Float, z : Float, w : Float){\r\n    storage[ 0] = 2f * (w*w + x*x) - 1f\r\n    storage[ 1] = 2f * (x*y - w*z)    \r\n    storage[ 2] = 2f * (x*z + w*y)\r\n    storage[ 3] = 0f\r\n    storage[ 4] = 2f * (x*y + w*z)    \r\n    storage[ 5] = 2f * (w*w + y*y) - 1f\r\n    storage[ 6] = 2f * (y*z - w*x)\r\n    storage[ 7] = 0f\r\n    storage[ 8] = 2f * (x*z - w*y)    \r\n    storage[ 9] = 2f * (y*z + w*x)\r\n    storage[10] = 2f * (w*w + z*z) - 1f\r\n    storage[11] = 0f    \r\n    storage[12] = 0f        \r\n    storage[13] = 0f        \r\n    storage[14] = 0f        \r\n    storage[15] = 1f                \r\n  }\r\n\r\n  fun fromQuaternion(q : Vec4){\r\n    fromQuaternion(q.x, q.y, q.z, q.w)\r\n  }\r\n\r\n  fun rotateByQuaternion(q : Vec4) : Mat4{\r\n    val qq = Mat4()\r\n    qq.fromQuaternion(q)\r\n    timesAssign(qq)\r\n    return this\r\n  }  \r\n\r\n  fun premul(m : Mat4) : Mat4 {\r\n    val n00 = storage[0]\r\n    val n01 = storage[4]\r\n    val n02 = storage[8]\r\n    val n03 = storage[12]\r\n    val n10 = storage[1]\r\n    val n11 = storage[5]\r\n    val n12 = storage[9]\r\n    val n13 = storage[13]\r\n    val n20 = storage[2]\r\n    val n21 = storage[6]\r\n    val n22 = storage[10]\r\n    val n23 = storage[14]\r\n    val n30 = storage[3]\r\n    val n31 = storage[7]\r\n    val n32 = storage[11]\r\n    val n33 = storage[15]\r\n    val m00 = m.storage[0]\r\n    val m01 = m.storage[4]\r\n    val m02 = m.storage[8]\r\n    val m03 = m.storage[12]\r\n    val m10 = m.storage[1]\r\n    val m11 = m.storage[5]\r\n    val m12 = m.storage[9]\r\n    val m13 = m.storage[13]\r\n    val m20 = m.storage[2]\r\n    val m21 = m.storage[6]\r\n    val m22 = m.storage[10]\r\n    val m23 = m.storage[14]\r\n    val m30 = m.storage[3]\r\n    val m31 = m.storage[7]\r\n    val m32 = m.storage[11]\r\n    val m33 = m.storage[15]\r\n    storage[0] = (m00 * n00) + (m01 * n10) + (m02 * n20) + (m03 * n30)\r\n    storage[1] = (m10 * n00) + (m11 * n10) + (m12 * n20) + (m13 * n30)\r\n    storage[2] = (m20 * n00) + (m21 * n10) + (m22 * n20) + (m23 * n30)\r\n    storage[3] = (m30 * n00) + (m31 * n10) + (m32 * n20) + (m33 * n30)\r\n    storage[4] = (m00 * n01) + (m01 * n11) + (m02 * n21) + (m03 * n31)\r\n    storage[5] = (m10 * n01) + (m11 * n11) + (m12 * n21) + (m13 * n31)\r\n    storage[6] = (m20 * n01) + (m21 * n11) + (m22 * n21) + (m23 * n31)\r\n    storage[7] = (m30 * n01) + (m31 * n11) + (m32 * n21) + (m33 * n31)\r\n    storage[8] = (m00 * n02) + (m01 * n12) + (m02 * n22) + (m03 * n32)\r\n    storage[9] = (m10 * n02) + (m11 * n12) + (m12 * n22) + (m13 * n32)\r\n    storage[10] = (m20 * n02) + (m21 * n12) + (m22 * n22) + (m23 * n32)\r\n    storage[11] = (m30 * n02) + (m31 * n12) + (m32 * n22) + (m33 * n32)\r\n    storage[12] = (m00 * n03) + (m01 * n13) + (m02 * n23) + (m03 * n33)\r\n    storage[13] = (m10 * n03) + (m11 * n13) + (m12 * n23) + (m13 * n33)\r\n    storage[14] = (m20 * n03) + (m21 * n13) + (m22 * n23) + (m23 * n33)\r\n    storage[15] = (m30 * n03) + (m31 * n13) + (m32 * n23) + (m33 * n33)\r\n    return this\r\n  }\r\n\r\n  operator fun timesAssign(m : Mat4){\r\n    val m00 = storage[0]\r\n    val m01 = storage[4]\r\n    val m02 = storage[8]\r\n    val m03 = storage[12]\r\n    val m10 = storage[1]\r\n    val m11 = storage[5]\r\n    val m12 = storage[9]\r\n    val m13 = storage[13]\r\n    val m20 = storage[2]\r\n    val m21 = storage[6]\r\n    val m22 = storage[10]\r\n    val m23 = storage[14]\r\n    val m30 = storage[3]\r\n    val m31 = storage[7]\r\n    val m32 = storage[11]\r\n    val m33 = storage[15]\r\n    val n00 = m.storage[0]\r\n    val n01 = m.storage[4]\r\n    val n02 = m.storage[8]\r\n    val n03 = m.storage[12]\r\n    val n10 = m.storage[1]\r\n    val n11 = m.storage[5]\r\n    val n12 = m.storage[9]\r\n    val n13 = m.storage[13]\r\n    val n20 = m.storage[2]\r\n    val n21 = m.storage[6]\r\n    val n22 = m.storage[10]\r\n    val n23 = m.storage[14]\r\n    val n30 = m.storage[3]\r\n    val n31 = m.storage[7]\r\n    val n32 = m.storage[11]\r\n    val n33 = m.storage[15]\r\n    storage[0] = (m00 * n00) + (m01 * n10) + (m02 * n20) + (m03 * n30)\r\n    storage[1] = (m10 * n00) + (m11 * n10) + (m12 * n20) + (m13 * n30)\r\n    storage[2] = (m20 * n00) + (m21 * n10) + (m22 * n20) + (m23 * n30)\r\n    storage[3] = (m30 * n00) + (m31 * n10) + (m32 * n20) + (m33 * n30)\r\n    storage[4] = (m00 * n01) + (m01 * n11) + (m02 * n21) + (m03 * n31)\r\n    storage[5] = (m10 * n01) + (m11 * n11) + (m12 * n21) + (m13 * n31)\r\n    storage[6] = (m20 * n01) + (m21 * n11) + (m22 * n21) + (m23 * n31)\r\n    storage[7] = (m30 * n01) + (m31 * n11) + (m32 * n21) + (m33 * n31)\r\n    storage[8] = (m00 * n02) + (m01 * n12) + (m02 * n22) + (m03 * n32)\r\n    storage[9] = (m10 * n02) + (m11 * n12) + (m12 * n22) + (m13 * n32)\r\n    storage[10] = (m20 * n02) + (m21 * n12) + (m22 * n22) + (m23 * n32)\r\n    storage[11] = (m30 * n02) + (m31 * n12) + (m32 * n22) + (m33 * n32)\r\n    storage[12] = (m00 * n03) + (m01 * n13) + (m02 * n23) + (m03 * n33)\r\n    storage[13] = (m10 * n03) + (m11 * n13) + (m12 * n23) + (m13 * n33)\r\n    storage[14] = (m20 * n03) + (m21 * n13) + (m22 * n23) + (m23 * n33)\r\n    storage[15] = (m30 * n03) + (m31 * n13) + (m32 * n23) + (m33 * n33)\r\n  }\r\n\r\n  operator fun times(m : Mat4) : Mat4 {\r\n    val res = Mat4(this)\r\n    res *= m\r\n    return res\r\n  }\r\n\r\n  operator fun timesAssign(s : Float) {\r\n    storage[ 0] *= s\r\n    storage[ 1] *= s\r\n    storage[ 2] *= s\r\n    storage[ 3] *= s\r\n    storage[ 4] *= s\r\n    storage[ 5] *= s\r\n    storage[ 6] *= s\r\n    storage[ 7] *= s\r\n    storage[ 8] *= s\r\n    storage[ 9] *= s\r\n    storage[10] *= s\r\n    storage[12] *= s\r\n    storage[13] *= s\r\n    storage[14] *= s\r\n    storage[15] *= s\r\n  }\r\n\r\n  operator fun times(s : Float) : Mat4 {\r\n    val res = Mat4(this)\r\n    res *= s\r\n    return res    \r\n  }\r\n\r\n  operator fun times(v : Vec4) : Vec4 {\r\n    val vp = Vec4()\r\n    vp.storage[0] = storage[ 0] * v.storage[0] + storage[ 1] * v.storage[1] + storage[ 2] * v.storage[2] + storage[ 3] * v.storage[3]\r\n    vp.storage[1] = storage[ 4] * v.storage[0] + storage[ 5] * v.storage[1] + storage[ 6] * v.storage[2] + storage[ 7] * v.storage[3]\r\n    vp.storage[2] = storage[ 8] * v.storage[0] + storage[ 9] * v.storage[1] + storage[10] * v.storage[2] + storage[11] * v.storage[3]\r\n    vp.storage[3] = storage[12] * v.storage[0] + storage[13] * v.storage[1] + storage[14] * v.storage[2] + storage[15] * v.storage[3]        \r\n    return vp    \r\n  }\r\n\r\n  fun scale(s : Vec2) : Mat4 { return scale(s.storage[0], s.storage[1], 1.0f)}\r\n  fun scale(s : Vec3) : Mat4 { return scale(s.storage[0], s.storage[1], s.storage[2])}  \r\n  fun scale(sx : Float = 1.0f, sy : Float = 1.0f, sz : Float = 1.0f) : Mat4 {\r\n    storage[ 0] *= sx\r\n    storage[ 1] *= sx\r\n    storage[ 2] *= sx\r\n    storage[ 3] *= sx\r\n    storage[ 4] *= sy\r\n    storage[ 5] *= sy\r\n    storage[ 6] *= sy\r\n    storage[ 7] *= sy\r\n    storage[ 8] *= sz\r\n    storage[ 9] *= sz\r\n    storage[10] *= sz\r\n    storage[11] *= sz\r\n    return this  \r\n  }\r\n\r\n  fun rotate(angle : Float, axis : Vec3) : Mat4 { return rotate(angle, axis.storage[0], axis.storage[1], axis.storage[2])}\r\n  fun rotate(angle : Float = 0.0f, axisX : Float = 0.0f, axisY : Float = 0.0f, axisZ : Float = 0.0f) : Mat4 {\r\n    var x = axisX\r\n    var y = axisY\r\n    var z = axisZ        \r\n    val axisLength2 = x*x + y*y + z*z\r\n    if(axisLength2 < 0.0001f){\r\n      x=0.0f\r\n      y=0.0f\r\n      z=1.0f\r\n    } else if(axisLength2 < 0.999f || axisLength2 > 1.001f) {\r\n      val axisLength = sqrt(axisLength2)\r\n      x /= axisLength\r\n      y /= axisLength\r\n      z /= axisLength\r\n    }\r\n    val cosa = cos(angle)\r\n    val sina = sin(angle)\r\n    val C = 1.0f - cosa\r\n    val m11 = x * x * C + cosa\r\n    val m21 = x * y * C - z * sina\r\n    val m31 = x * z * C + y * sina\r\n    val m12 = y * x * C + z * sina\r\n    val m22 = y * y * C + cosa\r\n    val m32 = y * z * C - x * sina\r\n    val m13 = z * x * C - y * sina\r\n    val m23 = z * y * C + x * sina\r\n    val m33 = z * z * C + cosa\r\n    val t0  = storage[ 0] * m11 + storage[ 4] * m21 + storage[ 8] * m31\r\n    val t4  = storage[ 0] * m12 + storage[ 4] * m22 + storage[ 8] * m32\r\n    val t8  = storage[ 0] * m13 + storage[ 4] * m23 + storage[ 8] * m33\r\n    val t1  = storage[ 1] * m11 + storage[ 5] * m21 + storage[ 9] * m31\r\n    val t5  = storage[ 1] * m12 + storage[ 5] * m22 + storage[ 9] * m32\r\n    val t9  = storage[ 1] * m13 + storage[ 5] * m23 + storage[ 9] * m33\r\n    val t2  = storage[ 2] * m11 + storage[ 6] * m21 + storage[10] * m31\r\n    val t6  = storage[ 2] * m12 + storage[ 6] * m22 + storage[10] * m32\r\n    val t10 = storage[ 2] * m13 + storage[ 6] * m23 + storage[10] * m33\r\n    val t3  = storage[ 3] * m11 + storage[ 7] * m21 + storage[11] * m31\r\n    val t7  = storage[ 3] * m12 + storage[ 7] * m22 + storage[11] * m32\r\n    val t11 = storage[ 3] * m13 + storage[ 7] * m23 + storage[11] * m33\r\n    storage[ 0] = t0 \r\n    storage[ 4] = t4 \r\n    storage[ 8] = t8 \r\n    storage[ 1] = t1 \r\n    storage[ 5] = t5 \r\n    storage[ 9] = t9 \r\n    storage[ 2] = t2 \r\n    storage[ 6] = t6 \r\n    storage[10] = t10\r\n    storage[ 3] = t3 \r\n    storage[ 7] = t7 \r\n    storage[11] = t11\r\n    return this  \r\n  }\r\n\r\n  fun translate(t : Vec2) : Mat4 { return translate(t.storage[0], t.storage[1])}  \r\n  fun translate(t : Vec3) : Mat4 { return translate(t.storage[0], t.storage[1], t.storage[2])}  \r\n  fun translate(x : Float = 0.0f, y : Float = 0.0f, z : Float = 0.0f) : Mat4 {\r\n    storage[ 0] += storage[12] * x\r\n    storage[ 4] += storage[12] * y\r\n    storage[ 8] += storage[12] * z\r\n    storage[ 1] += storage[13] * x\r\n    storage[ 5] += storage[13] * y\r\n    storage[ 9] += storage[13] * z\r\n    storage[ 2] += storage[14] * x\r\n    storage[ 6] += storage[14] * y\r\n    storage[10] += storage[14] * z  \r\n    storage[ 3] += storage[15] * x\r\n    storage[ 7] += storage[15] * y\r\n    storage[11] += storage[15] * z\r\n    return this      \r\n  }\r\n\r\n  fun transpose() : Mat4 {\r\n    var temp = storage[4]\r\n    storage[4] = storage[1]\r\n    storage[1] = temp\r\n    temp = storage[8]\r\n    storage[8] = storage[2]\r\n    storage[2] = temp\r\n    temp = storage[12]\r\n    storage[12] = storage[3]\r\n    storage[3] = temp\r\n    temp = storage[9]\r\n    storage[9] = storage[6]\r\n    storage[6] = temp\r\n    temp = storage[13]\r\n    storage[13] = storage[7]\r\n    storage[7] = temp\r\n    temp = storage[14]\r\n    storage[14] = storage[11]\r\n    storage[11] = temp\r\n    return this  \r\n  }\r\n\r\n  fun invert() : Mat4 {\r\n    val a00 = storage[0]\r\n    val a01 = storage[1]\r\n    val a02 = storage[2]\r\n    val a03 = storage[3]\r\n    val m000 = storage[4]\r\n    val m001 = storage[5]\r\n    val m002 = storage[6]\r\n    val m003 = storage[7]\r\n    val m100 = storage[8]\r\n    val m101 = storage[9]\r\n    val m102 = storage[10]\r\n    val m103 = storage[11]\r\n    val m200 = storage[12]\r\n    val m201 = storage[13]\r\n    val m202 = storage[14]\r\n    val m203 = storage[15]\r\n    val b00 = a00 * m001 - a01 * m000\r\n    val b01 = a00 * m002 - a02 * m000\r\n    val b02 = a00 * m003 - a03 * m000\r\n    val b03 = a01 * m002 - a02 * m001\r\n    val b04 = a01 * m003 - a03 * m001\r\n    val b05 = a02 * m003 - a03 * m002\r\n    val b06 = m100 * m201 - m101 * m200\r\n    val b07 = m100 * m202 - m102 * m200\r\n    val b08 = m100 * m203 - m103 * m200\r\n    val b09 = m101 * m202 - m102 * m201\r\n    val m010 = m101 * m203 - m103 * m201\r\n    val m011 = m102 * m203 - m103 * m202\r\n    val det =\r\n        (b00 * m011 - b01 * m010 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06)\r\n    if (det == 0.0f) {\r\n        return this\r\n    }\r\n    val invDet = 1.0f / det\r\n    storage[0] = (m001 * m011 - m002 * m010 + m003 * b09) * invDet\r\n    storage[1] = (-a01 * m011 + a02 * m010 - a03 * b09) * invDet\r\n    storage[2] = (m201 * b05 - m202 * b04 + m203 * b03) * invDet\r\n    storage[3] = (-m101 * b05 + m102 * b04 - m103 * b03) * invDet\r\n    storage[4] = (-m000 * m011 + m002 * b08 - m003 * b07) * invDet\r\n    storage[5] = (a00 * m011 - a02 * b08 + a03 * b07) * invDet\r\n    storage[6] = (-m200 * b05 + m202 * b02 - m203 * b01) * invDet\r\n    storage[7] = (m100 * b05 - m102 * b02 + m103 * b01) * invDet\r\n    storage[8] = (m000 * m010 - m001 * b08 + m003 * b06) * invDet\r\n    storage[9] = (-a00 * m010 + a01 * b08 - a03 * b06) * invDet\r\n    storage[10] = (m200 * b04 - m201 * b02 + m203 * b00) * invDet\r\n    storage[11] = (-m100 * b04 + m101 * b02 - m103 * b00) * invDet\r\n    storage[12] = (-m000 * b09 + m001 * b07 - m002 * b06) * invDet\r\n    storage[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet\r\n    storage[14] = (-m200 * b03 + m201 * b01 - m202 * b00) * invDet\r\n    storage[15] = (m100 * b03 - m101 * b01 + m102 * b00) * invDet\r\n    return this\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Mat4{\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Mat4 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Mat4) {\r\n    set(value)\r\n  }  \r\n\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniformMatrix4fv(uniformLocation, false, storage)\r\n  }\r\n\r\n}\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\n\r\n\r\nclass Mat4Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : UniformFloat {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex*16, endIndex*16)?:Float32Array(startIndex*16)\r\n\r\n  override fun set(vararg values : Float) : Mat4Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i%16) ?: if(i%16%5==0) 1.0f else 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Mat4{\r\n    return Mat4(storage, i*16)\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Mat4Array{\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Mat4Array {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Mat4Array) {\r\n    set(value)\r\n  }    \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniformMatrix4fv(uniformLocation, false, storage)\r\n  }\r\n\r\n}\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLProgram\r\nimport kotlin.reflect.KClass\r\n\r\nval WebGLRenderingContext.Companion.UNSIGNED_INT_SAMPLER_2D : Int get() = 0x8DD2\r\nval WebGLRenderingContext.Companion.INT_SAMPLER_2D : Int get() = 0x8DCA\r\nval WebGLRenderingContext.Companion.SAMPLER_2D_SHADOW : Int get() = 0x8B62\r\nval WebGLRenderingContext.Companion.UNSIGNED_INT_SAMPLER_CUBE : Int get() = 0x8DD4\r\nval WebGLRenderingContext.Companion.INT_SAMPLER_CUBE : Int get() = 0x8DCC\r\nval WebGLRenderingContext.Companion.SAMPLER_CUBE_SHADOW : Int get() = 0x8DC5\r\nval WebGLRenderingContext.Companion.UNSIGNED_INT_SAMPLER_3D : Int get() = 0x8DD3\r\nval WebGLRenderingContext.Companion.INT_SAMPLER_3D : Int get() = 0x8DCB\r\nval WebGLRenderingContext.Companion.SAMPLER_3D : Int get() = 0x8B5F\r\nval WebGLRenderingContext.Companion.UNSIGNED_INT_SAMPLER_2D_ARRAY : Int get() = 0x8DD7\r\nval WebGLRenderingContext.Companion.INT_SAMPLER_2D_ARRAY : Int get() = 0x8DCF\r\nval WebGLRenderingContext.Companion.SAMPLER_2D_ARRAY_SHADOW : Int get() = 0x8DC4\r\nval WebGLRenderingContext.Companion.SAMPLER_2D_ARRAY : Int get() = 0x8DC1\r\n\r\nclass UniformDescriptor(val name:String, val type: Int, val size: Int, val location: WebGLUniformLocation){\r\n}\r\n\r\nclass ProgramReflection(val gl : WebGLRenderingContext, val glProgram : WebGLProgram) : Drawable() {\r\n\r\n  val uniformDescriptors = HashMap<String, ArrayList<UniformDescriptor> >()\r\n\r\n  init{\r\n  \t// for all uniforms used in glProgram\r\n  \tval nUniforms = gl.getProgramParameter(glProgram, WebGLRenderingContext.ACTIVE_UNIFORMS) as Int\r\n  \tfor(i in 0 until nUniforms){ \r\n  \t  val glUniform = gl.getActiveUniform(glProgram, i) ?: throw Error(\"Uniform listed by gl.getProgramParameter but not found by gl.getActiveUniform.\")\r\n  \t  // separate struct name (if exists) and unqualified uniform name\r\n  \t  val nameParts = glUniform.name.split(\".\")\r\n  \t  val uniformName = nameParts.lastOrNull() ?: continue\r\n  \t  val structName = nameParts.dropLast(1).lastOrNull() ?: continue\r\n\r\n      uniformDescriptors[structName] = this.uniformDescriptors[structName] ?: ArrayList<UniformDescriptor>()\r\n      uniformDescriptors[structName]?.add( UniformDescriptor(\r\n        name = uniformName,\r\n        type = glUniform.type,\r\n        size = glUniform.size,\r\n        location = gl.getUniformLocation(glProgram, glUniform.name)?: throw Error(\"No location for ${glUniform.name}\")\r\n      )) ?: throw Error(\"Struct name ${structName} missing from uniform descriptors.\")\r\n    }\r\n  }\r\n  \r\n  override fun gatherUniforms(target : UniformProvider){\r\n    for(structName in target.glslStructNames) {\r\n      // Skip GLSL struct provided by the target if the program does not need it.\r\n      val descList = uniformDescriptors[structName] ?: continue\r\n\r\n      for(uniformDesc in descList) {\r\n        val reflectionVariable = ProgramReflection.makeVar(uniformDesc.type, uniformDesc.size, uniformDesc.name)\r\n\r\n        if(target.uniforms.containsKey(uniformDesc.name)){ // if reflection property already exists, check compatibility\r\n          val existingVariable = target.uniforms[uniformDesc.name] ?: throw Error(\"\"\"Key \"${uniformDesc.name}\" exists in uniforms, but its value is null.\"\"\")\r\n          if(glslTypesRepresented[existingVariable::class] != glslTypesRepresented[reflectionVariable::class] ||\r\n            existingVariable.getStorageSize() != reflectionVariable.getStorageSize()){\r\n            throw Error(\"Trying to reflect uniform ${uniformDesc.name} as a ${reflectionVariable::class.simpleName} with element count ${reflectionVariable.getStorageSize()}, but it already exists in the target object as a ${(existingVariable::class.simpleName)} with element count ${existingVariable.getStorageSize()}.\")\r\n          }\r\n        } else {\r\n          target.uniforms[uniformDesc.name] = reflectionVariable\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Sets values of all uniforms from the properties of the given objects.\r\n   * @param {...UniformProvider} uniformProviders - Objects with properties matching the names and the types of the uniforms to be set. Their glslStructNames property must list uniform struct names they are responsible for setting.\r\n   */\r\n  override fun draw(vararg uniformProviders : UniformProvider) { \r\n    gl.useProgram(glProgram)\r\n    var textureUnitCount = 0\r\n\r\n    for(provider in uniformProviders){\r\n      for(structName in provider.glslStructNames) {\r\n        val descList = uniformDescriptors[structName] ?: continue\r\n        for(uniformDesc in descList) {\r\n          provider[uniformDesc.name]?.commit(gl, uniformDesc.location, textureUnitCount) ?: throw Error(\"Uniform ${uniformDesc.name} in struct ${structName} from list ${descList}\")\r\n          //  keep track of texture units used\r\n          if( ProgramReflection.isSampler(uniformDesc.type) ){ \r\n            textureUnitCount += uniformDesc.size\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  companion object {\r\n    /**\r\n     * @method makeVar\r\n     * @memberof ProgramReflection\r\n     * @static \r\n     * @description Returns a new reflection variable based on a numerical WebGL type ID.\r\n     * @param {Number} type - The numeric type of the uniform, i.e. a value of a type identifier property in the rendering context.\r\n     * @param {Number} arraySize - The number of elements in the uniform, if it is an array. Otherwise, it must be 1.\r\n     * @return {Vec1 | Vec1Array | Vec2 | Vec2Array | Vec3 | Vec3Array | Vec4 | Vec4Array | Mat4 | Mat4Array | Sampler2D | Sampler2DArray | SamplerCube | SamplerCubeArray | Sampler3D | Sampler3DArray | Sampler2DArrayTexture | Sampler2DArrayTextureArray} The new reflection object.\r\n     */  \r\n    fun makeVar(type : Int, arraySize : Int, debugName : String) : Uniform {\r\n      if(arraySize == 1) {\r\n        when(type) {\r\n          WebGLRenderingContext.INT ->           return IVec1()\r\n          WebGLRenderingContext.UNSIGNED_INT ->  return IVec1()\r\n          WebGLRenderingContext.INT_VEC2 ->      return IVec2()\r\n          WebGLRenderingContext.INT_VEC3 ->      return IVec3()\r\n          WebGLRenderingContext.INT_VEC4 ->      return IVec4()\r\n          WebGLRenderingContext.FLOAT ->         return Vec1()\r\n          WebGLRenderingContext.FLOAT_VEC2 ->    return Vec2()\r\n          WebGLRenderingContext.FLOAT_VEC3 ->    return Vec3()\r\n          WebGLRenderingContext.FLOAT_VEC4 ->    return Vec4()\r\n          WebGLRenderingContext.FLOAT_MAT4 ->    return Mat4()\r\n          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D , \r\n//          WebGLRenderingContext.INT_SAMPLER_2D ,\r\n//          WebGLRenderingContext.SAMPLER_2D_SHADOW ,\r\n          WebGLRenderingContext.SAMPLER_2D ->    return Sampler2D(debugName)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_CUBE ,\r\n//          WebGLRenderingContext.INT_SAMPLER_CUBE ,\r\n//          WebGLRenderingContext.SAMPLER_CUBE_SHADOW ,\r\n          WebGLRenderingContext.SAMPLER_CUBE ->  return SamplerCube(debugName)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_3D ,\r\n//          WebGLRenderingContext.INT_SAMPLER_3D ,\r\n          WebGLRenderingContext.SAMPLER_3D ->    return Sampler3D(debugName)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D_ARRAY ,\r\n//          WebGLRenderingContext.INT_SAMPLER_2D_ARRAY ,\r\n//          WebGLRenderingContext.SAMPLER_2D_SHADOW_ARRAY ,\r\n//          WebGLRenderingContext.SAMPLER_2D_ARRAY ->    return Sampler2DArrayTexture()\r\n        }\r\n      } else {\r\n        when(type) {\r\n          WebGLRenderingContext.INT ->           return IVec1Array(arraySize)\r\n          WebGLRenderingContext.UNSIGNED_INT ->  return IVec1Array(arraySize)          \r\n          WebGLRenderingContext.FLOAT ->         return Vec1Array(arraySize)\r\n          WebGLRenderingContext.FLOAT_VEC2 ->    return Vec2Array(arraySize)\r\n          WebGLRenderingContext.FLOAT_VEC3 ->    return Vec3Array(arraySize)\r\n          WebGLRenderingContext.FLOAT_VEC4 ->    return Vec4Array(arraySize)\r\n          WebGLRenderingContext.FLOAT_MAT4 ->    return Mat4Array(arraySize)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D ,\r\n//          WebGLRenderingContext.INT_SAMPLER_2D ,\r\n//          WebGLRenderingContext.SAMPLER_2D_SHADOW ,\r\n//          WebGLRenderingContext.SAMPLER_2D ->    return Sampler2DArray(arraySize)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_CUBE ,\r\n//          WebGLRenderingContext.INT_SAMPLER_CUBE ,\r\n//          WebGLRenderingContext.SAMPLER_CUBE_SHADOW ,\r\n//          WebGLRenderingContext.SAMPLER_CUBE ->  return SamplerCubeArray(arraySize)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_3D , \r\n//          WebGLRenderingContext.INT_SAMPLER_3D ,\r\n//          WebGLRenderingContext.SAMPLER_3D ->    return Sampler3DArray(arraySize)\r\n//          WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D_ARRAY ,\r\n//          WebGLRenderingContext.INT_SAMPLER_2D_ARRAY ,\r\n//          WebGLRenderingContext.SAMPLER_2D_ARRAY_SHADOW ,\r\n//          WebGLRenderingContext.SAMPLER_2D_ARRAY ->    return Sampler2DArrayTextureArray(arraySize)\r\n        }\r\n      }\r\n      throw Error(\"Unhandled uniform variable of type ID ${type}.\")\r\n    }\r\n\r\n\r\n    /**\r\n     * @method isSampler\r\n     * @memberof ProgramReflection\r\n     * @static \r\n     * @description Returns true if type is a numerical WebGL type ID of a sampler uniform.\r\n     * @param {WebGL2RenderingContext} gl - The rendering context.\r\n     * @param {Number} type - The numeric type of the uniform, i.e. a value of a type identifier property in the rendering context.\r\n     */\r\n    fun isSampler(type : Int) : Boolean {\r\n      return  type == WebGLRenderingContext.SAMPLER_2D ||\r\n              type == WebGLRenderingContext.SAMPLER_3D ||\r\n              type == WebGLRenderingContext.SAMPLER_CUBE ||\r\n              type == WebGLRenderingContext.SAMPLER_2D_SHADOW ||\r\n              type == WebGLRenderingContext.SAMPLER_2D_ARRAY ||\r\n              type == WebGLRenderingContext.SAMPLER_2D_ARRAY_SHADOW ||\r\n              type == WebGLRenderingContext.SAMPLER_CUBE_SHADOW ||\r\n              type == WebGLRenderingContext.INT_SAMPLER_2D ||\r\n              type == WebGLRenderingContext.INT_SAMPLER_3D ||\r\n              type == WebGLRenderingContext.INT_SAMPLER_CUBE ||\r\n              type == WebGLRenderingContext.INT_SAMPLER_2D_ARRAY ||\r\n              type == WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D ||\r\n              type == WebGLRenderingContext.UNSIGNED_INT_SAMPLER_3D ||\r\n              type == WebGLRenderingContext.UNSIGNED_INT_SAMPLER_CUBE ||\r\n              type == WebGLRenderingContext.UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n    }\r\n\r\n    val glslTypesRepresented = mapOf<KClass<*>, Int>(\r\n      Vec1::class to WebGLRenderingContext.FLOAT,\r\n      Vec2::class to WebGLRenderingContext.FLOAT_VEC2,\r\n      Vec3::class to WebGLRenderingContext.FLOAT_VEC3,\r\n      Vec4::class to WebGLRenderingContext.FLOAT_VEC4,\r\n      Vec1Array::class to WebGLRenderingContext.FLOAT,\r\n      Vec2Array::class to WebGLRenderingContext.FLOAT_VEC2,\r\n      Vec3Array::class to WebGLRenderingContext.FLOAT_VEC3,\r\n      Vec4Array::class to WebGLRenderingContext.FLOAT_VEC4,      \r\n      Mat4::class to WebGLRenderingContext.FLOAT_MAT4,\r\n      IVec1::class to WebGLRenderingContext.INT,\r\n      IVec2::class to WebGLRenderingContext.INT_VEC2,\r\n      IVec3::class to WebGLRenderingContext.INT_VEC3,\r\n      IVec4::class to WebGLRenderingContext.INT_VEC4,\r\n      Sampler2D::class to WebGLRenderingContext.SAMPLER_2D,\r\n      Sampler3D::class to WebGLRenderingContext.SAMPLER_2D,\r\n      SamplerCube::class to WebGLRenderingContext.SAMPLER_CUBE,\r\n\r\n//      Quat::class to WebGLRenderingContext.VEC4,\r\n//      QuadraticMat4::class to WebGLRenderingContext.MAT4      \r\n    )\r\n  }\r\n}",null,"package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLTexture\r\nimport kotlin.reflect.KProperty\r\n\r\nclass Sampler2D(var debugName : String = \"\") : UniformSampler {\r\n\r\n  override val storage = Int32Array(1)\r\n  override val glTextures = Array<WebGLTexture?>(1) {null}\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Sampler2D {\r\n    provider.register(property.name, this)\r\n    debugName = property.name\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Sampler2D {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Sampler2D) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    storage[0] = samplerIndex\r\n    if(glTextures[0] != null) {\r\n      gl.uniform1iv(uniformLocation, storage)\r\n      gl.activeTexture(WebGLRenderingContext.TEXTURE0 + samplerIndex)\r\n      gl.bindTexture(WebGLRenderingContext.TEXTURE_2D, glTextures[0])\r\n    } else {\r\n      console.warn(\"No texture bound to Sampler2D reflecting uniform '${debugName}'.\")\r\n    }\r\n  }\r\n}","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLTexture\r\nimport kotlin.reflect.KProperty\r\n\r\nval WebGLRenderingContext.Companion.TEXTURE_3D : Int get() = 0x806F\r\n\r\nclass Sampler3D(var debugName : String = \"\") : UniformSampler {\r\n\r\n  override val storage = Int32Array(1)\r\n  override val glTextures = Array<WebGLTexture?>(1) {null}\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Sampler3D {\r\n    provider.register(property.name, this)\r\n    debugName = property.name    \r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Sampler3D {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Sampler3D) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    storage[0] = samplerIndex\r\n    if(glTextures[0] != null) {\r\n      gl.uniform1iv(uniformLocation, storage)\r\n      gl.activeTexture(WebGLRenderingContext.TEXTURE0 + samplerIndex)\r\n      gl.bindTexture(WebGLRenderingContext.TEXTURE_3D, glTextures[0])\r\n    } else {\r\n      console.warn(\"No texture bound to Sampler3D reflecting uniform '${debugName}'.\")\r\n    }\r\n  }\r\n}","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Int32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport org.khronos.webgl.WebGLTexture\r\nimport kotlin.reflect.KProperty\r\n\r\nclass SamplerCube(var debugName : String = \"\") : UniformSampler {\r\n\r\n  override val storage = Int32Array(1)\r\n  override val glTextures = Array<WebGLTexture?>(1) {null}\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : SamplerCube {\r\n    provider.register(property.name, this)\r\n    debugName = property.name\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): SamplerCube {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: SamplerCube) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    storage[0] = samplerIndex\r\n    if(glTextures[0] != null) {\r\n      gl.uniform1iv(uniformLocation, storage)\r\n      gl.activeTexture(WebGLRenderingContext.TEXTURE0 + samplerIndex)\r\n      gl.bindTexture(WebGLRenderingContext.TEXTURE_CUBE_MAP, glTextures[0])\r\n    } else {\r\n      console.warn(\"No texture bound to Sampler2D reflecting uniform '${debugName}'.\")\r\n    }\r\n  }\r\n}","package vision.gears.webglmath\r\n\r\nopen class UniformProvider(vararg val glslStructNames : String) : Drawable() {\r\n  internal val uniforms = HashMap<String, Uniform>()\r\n  fun register(uniformName : String, uniform : Uniform){\r\n    uniforms[uniformName] = uniform\r\n  }\r\n  operator fun get(name : String): Uniform? {\r\n    if(!uniforms.containsKey(name)){\r\n      console.error(\"\"\"WARNING: Attempt to access unknown or non-active uniform '${name}'.\"\"\" )         \r\n    }\r\n    return uniforms[name] }\r\n  operator fun set(name : String, uniform : Uniform ) { (uniforms[name] ?: return).set(uniform) }\r\n  operator fun set(name : String, value : Float ) { (uniforms[name] ?: return).set(value) }\r\n\r\n  val components = ArrayList<Drawable>()\r\n\r\n  fun addComponentsAndGatherUniforms(vararg children : Drawable){\r\n    components.addAll(children)\r\n    gatherUniforms(this)\r\n  }\r\n\r\n  override fun gatherUniforms(target : UniformProvider){\r\n    components.forEach {\r\n      it.gatherUniforms(target)\r\n    }\r\n  }\r\n\r\n  override fun draw(vararg uniformProviders : UniformProvider){\r\n    components.forEach {\r\n      it.draw(this, *uniformProviders)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recursively calls drawWithOverrides on subcomponents, but if there is\r\n   * an object of matching type in overrides, drawWithOverrides is called\r\n   * on it instead of the subcomponent.\r\n   */\r\n  override fun drawWithOverrides(overrides : Map<String, UniformProvider>, vararg uniformProviders : UniformProvider){\r\n    components.forEach{\r\n      (overrides[it::class.simpleName]?:it).drawWithOverrides(\r\n        overrides,\r\n        this,\r\n        *uniformProviders\r\n        )\r\n    }\r\n  }    \r\n\r\n  fun using(vararg overriders : UniformProvider) : Drawable {\r\n    val overrideMap = overriders.map{(it::class.simpleName?:\"<no class name>\") to it}.toMap()\r\n    return object : Drawable() {\r\n      override fun draw(vararg uniformProviders : UniformProvider){\r\n        this@UniformProvider.drawWithOverrides(overrideMap, *uniformProviders)\r\n      }\r\n      override fun drawWithOverrides(overrides : Map<String, UniformProvider>, vararg uniformProviders : UniformProvider){\r\n        val allOverrides : MutableMap<String, UniformProvider> = overrideMap.toMutableMap()\r\n        overrides.forEach{ (key : String, value : Drawable) -> allOverrides[key] = value } \r\n        this@UniformProvider.drawWithOverrides(allOverrides, *uniformProviders)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\nclass Vec1(backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(u: Float = 0.0f) : this(null, 0){\r\n    storage[0] = u\r\n  }\r\n  constructor(other : Vec1) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+1)?:Float32Array(1)\r\n  inline var x : Float\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline val xx : Vec2\r\n    get() = Vec2(storage[0], storage[0])\r\n  inline val xxx : Vec3\r\n    get() = Vec3(storage[0], storage[0], storage[0])\r\n  inline val xxxx : Vec4\r\n    get() = Vec4(storage[0], storage[0], storage[0], storage[0])        \r\n\r\n  inline fun clone() : Vec1 {\r\n    return Vec1(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float) : Vec1 {\r\n    storage[0] = values.getOrElse(0) {0.0f}\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = Vec1()\r\n    val ones = Vec1(1.0f) \r\n\r\n    inline fun makeRandom(minVal: Vec1 = Vec1.zeros, maxVal: Vec1 = Vec1.ones) : Vec1 {\r\n      return Vec1(\r\n          Random.nextFloat() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0]                    \r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f): Vec1 {\r\n      return Vec1.makeRandom(Vec1(minVal), Vec1(maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: Vec1 = Vec1.zeros, maxVal: Vec1 = Vec1.ones){\r\n    set(Vec1.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Float = 0.0f, maxVal: Float = 1.0f){\r\n    randomize(Vec1(minVal), Vec1(maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: Vec1 = Vec1.zeros, maxVal: Vec1 = Vec1.ones) : Vec1 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : Vec1 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : Vec1 {\r\n    return Vec1(-storage[0])\r\n  }\r\n\r\n  operator inline fun times(scalar : Float) : Vec1 {\r\n    return Vec1(\r\n      storage[0] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Float) : Vec1 {\r\n    return Vec1(\r\n      storage[0] / scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Float) {\r\n    storage[0] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Float) {\r\n    storage[0] /= scalar\r\n  }    \r\n\r\n  operator inline fun plusAssign(other : Vec1) {\r\n    storage[0] += other.storage[0]\r\n  }\r\n\r\n  operator inline fun plus(other : Vec1) : Vec1 {\r\n    return Vec1(\r\n      storage[0] + other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : Vec1) {\r\n    storage[0] -= other.storage[0]\r\n  }\r\n\r\n  operator inline fun minus(other : Vec1) : Vec1 {\r\n    return Vec1(\r\n      storage[0] - other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : Vec1) {\r\n    storage[0] *= other.storage[0]\r\n  }\r\n\r\n  operator inline fun times(other : Vec1) : Vec1 {\r\n    return Vec1(\r\n      storage[0] * other.storage[0]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : Vec1) {\r\n    storage[0] /= other.storage[0]\r\n  }\r\n\r\n  operator inline fun div(other : Vec1) : Vec1 {\r\n    return Vec1(\r\n      storage[0] / other.storage[0]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Float {\r\n    return storage[0] * storage[0]\r\n  }\r\n\r\n  inline fun length() : Float {\r\n    return storage[0]\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec1 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec1 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec1) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform1fv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.times(v: Vec1) = Vec1(this * v.storage[0])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.div(v: Vec1) = Vec1(this / v.storage[0])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\n\r\nclass Vec1Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : VecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex, endIndex)?:Float32Array(startIndex)\r\n\r\n  override fun set(vararg values : Float) : Vec1Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i) ?: 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Vec1{\r\n    return Vec1(storage, i)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : Vec1Array {\r\n    return Vec1Array(storage, begin, end)\r\n  }\r\n\r\n  fun setDot(b : Vec2Array, c : Vec2Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*2] * c.storage[i*2] + b.storage[i*2+1] * c.storage[i*2+1]\r\n    } \r\n  }\r\n  fun setDot(b : Vec3Array, c : Vec3Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*3] * c.storage[i*3] + b.storage[i*3+1] * c.storage[i*3+1] + b.storage[i*3+2] * c.storage[i*3+2]\r\n    }\r\n  }\r\n  fun setDot(b : Vec4Array, c : Vec4Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*4] * c.storage[i*4] + b.storage[i*4+1] * c.storage[i*4+1] + b.storage[i*4+2] * c.storage[i*4+2] + b.storage[i*4+3] * c.storage[i*4+3]\r\n    }\r\n  }  \r\n  fun setDot(b : Vec2Array, c : Vec2) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*2] * c.storage[0] + b.storage[i*2+1] * c.storage[1]\r\n    }\r\n  }\r\n  fun setDot(b : Vec3Array, c : Vec3) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*3] * c.storage[0] + b.storage[i*3+1] * c.storage[1] + b.storage[i*3+2] * c.storage[2]\r\n    }\r\n  }\r\n  fun setDot(b : Vec4Array, c : Vec4) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = b.storage[i*4] * c.storage[0] + b.storage[i*4+1] * c.storage[1] + b.storage[i*4+2] * c.storage[2] + b.storage[i*4+3] * c.storage[3]\r\n    }\r\n  }\r\n  fun setLength(b : Vec2Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = sqrt(b.storage[i*2] * b.storage[i*2] + b.storage[i*2+1] * b.storage[i*2+1])\r\n    }\r\n  }\r\n  fun setLength(b : Vec3Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = sqrt(b.storage[i*3] * b.storage[i*3] + b.storage[i*3+1] * b.storage[i*3+1] + b.storage[i*3+2] * b.storage[i*3+2])\r\n    }\r\n  }\r\n  fun setLength(b : Vec4Array) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = sqrt(b.storage[i*4] * b.storage[i*4] + b.storage[i*4+1] * b.storage[i*4+1] + b.storage[i*4+2] * b.storage[i*4+2] + b.storage[i*4+3] * b.storage[i*4+3])\r\n    }\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec1Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec1Array {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec1Array) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform1fv(uniformLocation, storage)\r\n  }  \r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.sqrt\r\nimport kotlinx.serialization.*\r\nimport kotlinx.serialization.descriptors.*\r\nimport kotlinx.serialization.json.*\r\nimport kotlinx.serialization.encoding.*\r\n\r\nobject Vec2Serializer : KSerializer<Vec2> {\r\n  @kotlinx.serialization.InternalSerializationApi\r\n  override val descriptor: SerialDescriptor =\r\n    buildSerialDescriptor(\"vision.gears.Vec2\", StructureKind.LIST)\r\n  override fun deserialize(decoder: Decoder): Vec2 {\r\n    val input = decoder as? JsonDecoder ?: throw SerializationException(\"Expected Json Input\")\r\n    val array = input.decodeJsonElement() as? JsonArray ?: throw SerializationException(\"Expected JsonArray\")\r\n    return Vec2(\r\n      (array[0] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[1] as? JsonPrimitive)?.float ?: 0.0f \r\n    )\r\n    //return Vec2(decoder.decodeSerializableValue(FloatArraySerializer()))\r\n  }\r\n  override fun serialize(encoder: Encoder, value : Vec2) {\r\n    val output = encoder as? JsonEncoder ?: throw SerializationException(\"This class can be saved only by Json\")\r\n    val array = buildJsonArray {\r\n      add(value.x)\r\n      add(value.y)\r\n    }\r\n    /*array.encodeFloatElement(descriptor, 0, value.x)\r\n    array.encodeFloatElement(descriptor, 1, value.y)*/\r\n    output.encodeJsonElement(array)\r\n  }      \r\n}\r\n\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\n@Serializable(with = Vec2Serializer::class)\r\nclass Vec2(backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(u: Float = 0.0f, v: Float = 0.0f) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n  }\r\n  constructor(other : Vec1, v: Float = 0.0f) : this(other.storage[0], v ){}\r\n  constructor(other : Vec2) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+2)?:Float32Array(2)\r\n  inline var x : Float\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Float\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline val xy0 : Vec3\r\n    get() = Vec3(storage[0], storage[1], 0.0f)\r\n  inline val xy00 : Vec4\r\n    get() = Vec4(storage[0], storage[1], 0.0f, 0.0f)    \r\n  inline val xy01 : Vec4\r\n    get() = Vec4(storage[0], storage[1], 0.0f, 1.0f)\r\n\r\n  inline fun clone() : Vec2 {\r\n    return Vec2(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float) : Vec2 {\r\n    storage[0] = values.getOrElse(0) {0.0f}\r\n    storage[1] = values.getOrElse(1) {0.0f}\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = Vec2()\r\n    val ones = Vec2(1.0f, 1.0f) \r\n\r\n    inline fun makeRandom(minVal: Vec2 = Vec2.zeros, maxVal: Vec2 = Vec2.ones) : Vec2 {\r\n      return Vec2(\r\n          Random.nextFloat() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextFloat() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1]\r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f) : Vec2 {\r\n      return Vec2.makeRandom(Vec2(minVal, minVal), Vec2(maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: Vec2 = Vec2.zeros, maxVal: Vec2 = Vec2.ones){\r\n    set(Vec2.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Float = 0.0f, maxVal: Float = 1.0f){\r\n    randomize(Vec2(minVal, minVal), Vec2(maxVal, maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: Vec2 = Vec2.zeros, maxVal: Vec2 = Vec2.ones) : Vec2 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : Vec2 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : Vec2 {\r\n    return Vec2(-storage[0], -storage[1])\r\n  }\r\n\r\n  operator inline fun times(scalar : Float) : Vec2 {\r\n    return Vec2(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Float) : Vec2 {\r\n    return Vec2(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Float) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Float) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n  }\r\n\r\n  operator inline fun plusAssign(other : Vec2) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n  }\r\n\r\n  operator inline fun plus(other : Vec2) : Vec2 {\r\n    return Vec2(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : Vec2) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n  }\r\n\r\n  operator inline fun minus(other : Vec2) : Vec2 {\r\n    return Vec2(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : Vec2) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n  }\r\n\r\n  operator inline fun times(other : Vec2) : Vec2 {\r\n    return Vec2(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : Vec2) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n  }\r\n\r\n  operator inline fun div(other : Vec2) : Vec2 {\r\n    return Vec2(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Float {\r\n    return storage[0] * storage[0] + storage[1] * storage[1]\r\n  }\r\n\r\n  inline fun length() : Float {\r\n    return sqrt(lengthSquared())\r\n  }\r\n\r\n  inline fun normalize() : Vec2 {\r\n    val l = this.length()\r\n    storage[0] /= l\r\n    storage[1] /= l\r\n    return this\r\n  }\r\n\r\n  infix inline fun dot(other : Vec2) : Float {\r\n    return (\r\n     storage[0] * other.storage[0] +\r\n     storage[1] * other.storage[1] )\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec2 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec2 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec2) {\r\n    set(value)\r\n  }\r\n  \r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform2fv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.times(v: Vec2) = Vec2(this * v.storage[0], this * v.storage[1])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.div(v: Vec2) = Vec2(this / v.storage[0], this / v.storage[1])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\nimport kotlin.math.cos\r\nimport kotlin.math.sin\r\n\r\nclass Vec2Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : VecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex*2, endIndex*2)?:Float32Array(startIndex*2)\r\n\r\n  override fun set(vararg values : Float) : Vec2Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i%2) ?: 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Vec2{\r\n    return Vec2(storage, i*2)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : Vec2Array {\r\n    return Vec2Array(storage, begin, end)\r\n  }\r\n\r\n  fun setNormalized(b : Vec2Array) {\r\n    for(i in 0 until storage.length step 2) {\r\n      val l2 =\r\n        b.storage[i  ] * b.storage[i  ] +\r\n        b.storage[i+1] * b.storage[i+1]\r\n      val linv = 1 / sqrt(l2)\r\n      storage[i  ] = b.storage[i  ] * linv\r\n      storage[i+1] = b.storage[i+1] * linv\r\n    }\r\n  }\r\n\r\n  fun setAffineTransformed(v : Vec2Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 2) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1] +\r\n                          m.storage[ 3]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5] +\r\n                          m.storage[ 7]\r\n    }\r\n  }\r\n\r\n  fun setAffineNormalTransformed(v : Vec2Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 2) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5]\r\n    }\r\n  }  \r\n\r\n  fun setCosSin(alphas : Vec1Array){\r\n    for(i in 0 until storage.length step 2) {\r\n      this.storage[i+0] = cos(alphas.storage[i/2])\r\n      this.storage[i+1] = sin(alphas.storage[i/2])\r\n    }\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec2Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec2Array {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec2Array) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform4fv(uniformLocation, storage)\r\n  }  \r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.sqrt\r\nimport kotlinx.serialization.*\r\nimport kotlinx.serialization.descriptors.*\r\nimport kotlinx.serialization.json.*\r\nimport kotlinx.serialization.encoding.*\r\n\r\nobject Vec3Serializer : KSerializer<Vec3> {\r\n  @kotlinx.serialization.InternalSerializationApi\r\n  override val descriptor: SerialDescriptor =\r\n    buildSerialDescriptor(\"vision.gears.Vec3\", StructureKind.LIST)\r\n  override fun deserialize(decoder: Decoder): Vec3 {\r\n    val input = decoder as? JsonDecoder ?: throw SerializationException(\"Expected Json Input\")\r\n    val array = input.decodeJsonElement() as? JsonArray ?: throw SerializationException(\"Expected JsonArray\")\r\n    return Vec3(\r\n      (array[0] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[1] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[2] as? JsonPrimitive)?.float ?: 0.0f\r\n    )\r\n  }\r\n  override fun serialize(encoder: Encoder, value : Vec3) {\r\n    val output = encoder as? JsonEncoder ?: throw SerializationException(\"This class can be saved only by Json\")\r\n    val array = buildJsonArray {\r\n      add(value.x)\r\n      add(value.y)\r\n      add(value.z)\r\n    }\r\n    output.encodeJsonElement(array)\r\n  }      \r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\n@Serializable(with = Vec3Serializer::class)\r\nclass Vec3(backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(u: Float = 0.0f, v: Float = 0.0f, s: Float = 0.0f) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n    storage[2] = s\r\n  }\r\n  constructor(other : Vec1, v: Float = 0.0f, s: Float = 0.0f) : this(other.storage[0], v, s){}\r\n  constructor(other : Vec2, s: Float = 0.0f) : this(other.storage[0], other.storage[1], s){}\r\n  constructor(other : Vec3) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n  constructor(other : Vec4) : this(other.storage[0]/other.storage[3], other.storage[1]/other.storage[3], other.storage[2]/other.storage[3]){}\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+3)?:Float32Array(3)\r\n  inline var x : Float\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Float\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline var z : Float\r\n    get() = storage[2]\r\n    set(value) { storage[2] = value }\r\n  inline var xy : Vec2\r\n    get() = Vec2(storage)\r\n    set(value) { Vec2(storage).set(value) }\r\n  inline val xyz0 : Vec4\r\n    get() = Vec4(storage[0], storage[1], storage[2], 0.0f)    \r\n  inline val xyz1 : Vec4\r\n    get() = Vec4(storage[0], storage[1], storage[2], 1.0f)\r\n\r\n  inline fun clone() : Vec3 {\r\n    return Vec3(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float) : Vec3 {\r\n    storage[0] = values.getOrElse(0) {0.0f}\r\n    storage[1] = values.getOrElse(1) {0.0f}\r\n    storage[2] = values.getOrElse(2) {0.0f}\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = Vec3()\r\n    val ones = Vec3(1.0f, 1.0f, 1.0f) \r\n\r\n    inline fun makeRandom(minVal: Vec3 = Vec3.zeros, maxVal: Vec3 = Vec3.ones) : Vec3 {\r\n      return Vec3(\r\n          Random.nextFloat() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextFloat() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1],\r\n          Random.nextFloat() * (maxVal.storage[2] - minVal.storage[2]) + minVal.storage[2]                    \r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f) : Vec3 {\r\n      return Vec3.makeRandom(Vec3(minVal, minVal, minVal), Vec3(maxVal, maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun randomize(minVal: Vec3 = Vec3.zeros, maxVal: Vec3 = Vec3.ones){\r\n    set(Vec3.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun randomize(minVal: Float = 0.0f, maxVal: Float = 1.0f){\r\n    randomize(Vec3(minVal, minVal, minVal), Vec3(maxVal, maxVal, maxVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: Vec3 = Vec3.zeros, maxVal: Vec3 = Vec3.ones) : Vec3 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[2] < minVal.storage[2]){\r\n      storage[2] = minVal.storage[2]\r\n    }\r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    if(storage[2] > maxVal.storage[2]){\r\n      storage[2] = maxVal.storage[2]\r\n    }        \r\n    return this\r\n  }\r\n\r\n  infix fun getsIfLess(other : Vec3){\r\n    if(storage[0] > other.storage[0]){\r\n      storage[0] = other.storage[0]\r\n    }\r\n    if(storage[1] > other.storage[1]){\r\n      storage[1] = other.storage[1]\r\n    }\r\n    if(storage[2] > other.storage[2]){\r\n      storage[2] = other.storage[2]\r\n    }        \r\n  }\r\n\r\n  infix fun getsIfMore(other : Vec3){\r\n    if(storage[0] < other.storage[0]){\r\n      storage[0] = other.storage[0]\r\n    }\r\n    if(storage[1] < other.storage[1]){\r\n      storage[1] = other.storage[1]\r\n    }\r\n    if(storage[2] < other.storage[2]){\r\n      storage[2] = other.storage[2]\r\n    }        \r\n  }  \r\n\r\n  operator inline fun get(index : Int) : Float {\r\n    return storage[index]\r\n  }\r\n\r\n  operator fun set(index: Int, value: Float) {\r\n    storage[index] = value \r\n  }  \r\n\r\n  operator inline fun unaryPlus() : Vec3 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : Vec3 {\r\n    return Vec3(-storage[0], -storage[1], -storage[2])\r\n  }\r\n\r\n  operator inline fun times(scalar : Float) : Vec3 {\r\n    return Vec3(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar,\r\n      storage[2] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Float) : Vec3 {\r\n    return Vec3(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar,\r\n      storage[2] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Float) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n    storage[2] *= scalar    \r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Float) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n    storage[2] /= scalar\r\n  }\r\n\r\n  operator inline fun plusAssign(other : Vec3) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n    storage[2] += other.storage[2]\r\n  }\r\n\r\n  operator inline fun plus(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1],\r\n      storage[2] + other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : Vec3) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n    storage[2] -= other.storage[2]\r\n  }\r\n\r\n  operator inline fun minus(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1],\r\n      storage[2] - other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : Vec3) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n    storage[2] *= other.storage[2]\r\n  }\r\n\r\n  operator inline fun times(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1],\r\n      storage[2] * other.storage[2]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : Vec3) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n    storage[2] /= other.storage[2]\r\n  }\r\n\r\n  operator inline fun div(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1],\r\n      storage[2] / other.storage[2]\r\n      )\r\n  }       \r\n\r\n  inline fun lengthSquared() : Float {\r\n    return storage[0] * storage[0] + storage[1] * storage[1] + storage[2] * storage[2]\r\n  }\r\n\r\n  inline fun length() : Float {\r\n    return sqrt(lengthSquared())\r\n  }\r\n\r\n  inline fun normalize() : Vec3 {\r\n    val l = this.length()\r\n    storage[0] /= l\r\n    storage[1] /= l\r\n    storage[2] /= l\r\n    return this\r\n  }\r\n\r\n  infix inline fun dot(other : Vec3) : Float {\r\n    return (\r\n      storage[0] * other.storage[0] +\r\n      storage[1] * other.storage[1] +\r\n      storage[2] * other.storage[2] )\r\n  }\r\n\r\n  infix inline fun cross(other : Vec3) : Vec3 {\r\n    return Vec3(\r\n      storage[1] * other.storage[2] - storage[2] * other.storage[1],\r\n      storage[2] * other.storage[0] - storage[0] * other.storage[2],\r\n      storage[0] * other.storage[1] - storage[1] * other.storage[0])\r\n  }\r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec3 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec3 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec3) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform3fv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.times(v: Vec3) = Vec3(v.x * this, v.y * this, v.z * this)\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.div(v: Vec3) = Vec3(this / v.x, this / v.y, this / v.z)","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\n/*import kotlinx.serialization.*\r\nimport kotlinx.serialization.descriptors.*\r\nimport kotlinx.serialization.json.*\r\nimport kotlinx.serialization.encoding.*\r\n\r\nobject Vec3ArraySerializer : KSerializer<Vec3Array> {\r\n  @kotlinx.serialization.InternalSerializationApi\r\n  override val descriptor: SerialDescriptor =\r\n    buildSerialDescriptor(\"vision.gears.Vec3Array\", StructureKind.LIST)\r\n  override fun deserialize(decoder: Decoder): Vec3Array {\r\n    val input = decoder as? JsonDecoder ?: throw SerializationException(\"Expected Json Input\")\r\n    val array = input.decodeJsonElement() as? JsonArray ?: throw SerializationException(\"Expected JsonArray\")\r\n    val va = Vec3Array(array.size)\r\n    array.forEachIndexed{ (i : Int, e : JsonElement) ->\r\n      val qrr = e as? JsonArray ?: throw SerializationException(\"Expected JsonArray of JsonArrays\")\r\n      va.storage[i*3 + 0] = qrr?.getOrNull(0)?.float ?: 0.0f\r\n      va.storage[i*3 + 1] = qrr?.getOrNull(1)?.float ?: 0.0f\r\n      va.storage[i*3 + 2] = qrr?.getOrNull(2)?.float ?: 0.0f            \r\n    }\r\n    return va\r\n  }\r\n  override fun serialize(encoder: Encoder, value : Vec3Array) {\r\n    val output = encoder as? JsonEncoder ?: throw SerializationException(\"This class can be saved only by Json\")\r\n    val array = buildJsonArray {\r\n      for(i in 0 until storage.length/3) {\r\n        buildJsonArray {\r\n          add(storage[i*3+0])\r\n          add(storage[i*3+1])\r\n          add(storage[i*3+2])                \r\n        }\r\n      }\r\n    }\r\n    output.encodeJsonElement(array)\r\n  }      \r\n}\r\n\r\n@Serializable(with = Vec3ArraySerializer::class)*/\r\nclass Vec3Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : VecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex*3, endIndex*3)?:Float32Array(startIndex*3)\r\n\r\n  override fun set(vararg values : Float) : Vec3Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i%3) ?: 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Vec3{\r\n    return Vec3(storage, i*3)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : Vec3Array {\r\n    return Vec3Array(storage, begin, end)\r\n  }\r\n\r\n  fun setNormalized(b : Vec3Array) {\r\n    for(i in 0 until storage.length step 3) {\r\n      val l2 =\r\n        b.storage[i  ] * b.storage[i  ] +\r\n        b.storage[i+1] * b.storage[i+1] +\r\n        b.storage[i+2] * b.storage[i+2]\r\n      val linv = 1 / sqrt(l2)\r\n      storage[i  ] = b.storage[i  ] * linv\r\n      storage[i+1] = b.storage[i+1] * linv\r\n      storage[i+2] = b.storage[i+2] * linv\r\n    }\r\n  }\r\n\r\n  fun setCrossed(b : Vec3Array, c : Vec3Array) {\r\n    var j = 0\r\n    for(i in 0 until storage.length step 3) {\r\n      val b0 = b.storage[j]\r\n      val c0 = c.storage[j++]    \r\n      val b1 = b.storage[j]\r\n      val c1 = c.storage[j++]    \r\n      val b2 = b.storage[j]\r\n      val c2 = c.storage[j++]\r\n      storage[i  ] = b1 * c2 - b2 * c1\r\n      storage[i+1] = b2 * c0 - b0 * c2\r\n      storage[i+2] = b0 * c1 - b1 * c0 \r\n    }\r\n  }  \r\n\r\n  fun setAffineTransformed(v : Vec3Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 3) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1] +\r\n         v.storage[i+2] * m.storage[ 2] +\r\n                          m.storage[ 3]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5] +\r\n         v.storage[i+2] * m.storage[ 6] +\r\n                          m.storage[ 7]\r\n      storage[i+2] =\r\n         v.storage[i+0] * m.storage[ 8] +\r\n         v.storage[i+1] * m.storage[ 9] +\r\n         v.storage[i+2] * m.storage[10] +\r\n                          m.storage[11]      \r\n    }\r\n  }\r\n\r\n  fun setAffineNormalTransformed(v : Vec3Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 3) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1] +\r\n         v.storage[i+2] * m.storage[ 2]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5] +\r\n         v.storage[i+2] * m.storage[ 6]\r\n      storage[i+2] =\r\n         v.storage[i+0] * m.storage[ 8] +\r\n         v.storage[i+1] * m.storage[ 9] +\r\n         v.storage[i+2] * m.storage[10]      \r\n    }\r\n  }  \r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec3Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec3Array {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec3Array) {\r\n    set(value)\r\n  }  \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform3fv(uniformLocation, storage)\r\n  }  \r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.sqrt\r\nimport kotlinx.serialization.*\r\nimport kotlinx.serialization.descriptors.*\r\nimport kotlinx.serialization.json.*\r\nimport kotlinx.serialization.encoding.*\r\n\r\nobject Vec4Serializer : KSerializer<Vec4> {\r\n  @kotlinx.serialization.InternalSerializationApi\r\n  override val descriptor: SerialDescriptor =\r\n    buildSerialDescriptor(\"vision.gears.Vec4\", StructureKind.LIST)\r\n  override fun deserialize(decoder: Decoder): Vec4 {\r\n    val input = decoder as? JsonDecoder ?: throw SerializationException(\"Expected Json Input\")\r\n    val array = input.decodeJsonElement() as? JsonArray ?: throw SerializationException(\"Expected JsonArray\")\r\n    return Vec4(\r\n      (array[0] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[1] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[2] as? JsonPrimitive)?.float ?: 0.0f,\r\n      (array[3] as? JsonPrimitive)?.float ?: 1.0f\r\n    )\r\n  }\r\n  override fun serialize(encoder: Encoder, value : Vec4) {\r\n    val output = encoder as? JsonEncoder ?: throw SerializationException(\"This class can be saved only by Json\")\r\n    val array = buildJsonArray {\r\n      add(value.x)\r\n      add(value.y)\r\n      add(value.z)\r\n      add(value.w)            \r\n    }\r\n    output.encodeJsonElement(array)\r\n  }      \r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\n@Serializable(with = Vec4Serializer::class)\r\nclass Vec4(backingStorage: Float32Array?, offset: Int = 0) : UniformFloat {\r\n\r\n  constructor(u: Float = 0.0f, v: Float = 0.0f, s: Float = 0.0f, t: Float = 1.0f) : this(null, 0){\r\n    storage[0] = u\r\n    storage[1] = v\r\n    storage[2] = s\r\n    storage[3] = t\r\n  }\r\n  constructor(other : Vec1, v: Float = 0.0f, s: Float = 0.0f, w: Float = 1.0f) : this(other.storage[0], v, s, w){}\r\n  constructor(other : Vec2, s: Float = 0.0f, w: Float = 1.0f) : this(other.storage[0], other.storage[1], s, w){}\r\n  constructor(other : Vec3, w: Float = 1.0f) : this(other.storage[0], other.storage[1], other.storage[2], w){}\r\n  constructor(other : Vec4) : this(null, 0)  {\r\n    storage.set(other.storage)\r\n  }\r\n\r\n  override val storage: Float32Array = backingStorage?.subarray(offset, offset+4)?:Float32Array(4)\r\n  inline var x : Float\r\n    get() = storage[0]\r\n    set(value) { storage[0] = value }\r\n  inline var y : Float\r\n    get() = storage[1]\r\n    set(value) { storage[1] = value }\r\n  inline var z : Float\r\n    get() = storage[2]\r\n    set(value) { storage[2] = value }\r\n  inline var w : Float\r\n    get() = storage[3]\r\n    set(value) { storage[3] = value }    \r\n  inline var xy : Vec2\r\n    get() = Vec2(storage)\r\n    set(value) { Vec2(storage).set(value) }\r\n  inline var xyz : Vec3\r\n    get() = Vec3(storage)\r\n    set(value) { Vec3(storage).set(value) }\r\n\r\n  inline fun clone() : Vec4 {\r\n    return Vec4(this)\r\n  }\r\n\r\n  override fun set(vararg values : Float) : Vec4 {\r\n    storage[0] = values.getOrElse(0) {0.0f}\r\n    storage[1] = values.getOrElse(1) {0.0f}\r\n    storage[2] = values.getOrElse(2) {0.0f}\r\n    storage[3] = values.getOrElse(3) {1.0f}\r\n    return this \r\n  }\r\n\r\n  companion object {\r\n    val zeros = Vec4(0.0f, 0.0f, 0.0f, 0.0f)\r\n    val ones = Vec4(1.0f, 1.0f, 1.0f, 1.0f) \r\n\r\n    inline fun makeRandom(minVal: Vec4 = Vec4.zeros, maxVal: Vec4 = Vec4.ones) : Vec4 {\r\n      return Vec4(\r\n          Random.nextFloat() * (maxVal.storage[0] - minVal.storage[0]) + minVal.storage[0],\r\n          Random.nextFloat() * (maxVal.storage[1] - minVal.storage[1]) + minVal.storage[1],\r\n          Random.nextFloat() * (maxVal.storage[2] - minVal.storage[2]) + minVal.storage[2],                    \r\n          Random.nextFloat() * (maxVal.storage[3] - minVal.storage[3]) + minVal.storage[3]\r\n        )  \r\n    }\r\n    inline fun makeRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f) : Vec4 {\r\n      return Vec4.makeRandom(Vec4(minVal, minVal, minVal, minVal), Vec4(maxVal, maxVal, maxVal, maxVal))\r\n    }\r\n  }\r\n\r\n  inline fun setRandom(minVal: Vec4 = Vec4.zeros, maxVal: Vec4 = Vec4.ones){\r\n    set(Vec4.makeRandom(minVal, maxVal))\r\n  }\r\n  inline fun setRandom(minVal: Float = 0.0f, maxVal: Float = 1.0f){\r\n    setRandom(Vec4(minVal, minVal, minVal, minVal), Vec4(maxVal, maxVal, maxVal, minVal))\r\n  }\r\n\r\n  inline fun clamp(minVal: Vec4 = Vec4.zeros, maxVal: Vec4 = Vec4.ones) : Vec4 {\r\n    if(storage[0] < minVal.storage[0]){\r\n      storage[0] = minVal.storage[0]\r\n    }\r\n    if(storage[1] < minVal.storage[1]){\r\n      storage[1] = minVal.storage[1]\r\n    }\r\n    if(storage[2] < minVal.storage[2]){\r\n      storage[2] = minVal.storage[2]\r\n    }\r\n    if(storage[3] < minVal.storage[3]){\r\n      storage[3] = minVal.storage[3]\r\n    }    \r\n    if(storage[0] > maxVal.storage[0]){\r\n      storage[0] = maxVal.storage[0]\r\n    }\r\n    if(storage[1] > maxVal.storage[1]){\r\n      storage[1] = maxVal.storage[1]\r\n    }\r\n    if(storage[2] > maxVal.storage[2]){\r\n      storage[2] = maxVal.storage[2]\r\n    }        \r\n    if(storage[3] > maxVal.storage[3]){\r\n      storage[3] = maxVal.storage[3]\r\n    }            \r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryPlus() : Vec4 {\r\n    return this\r\n  }\r\n\r\n  operator inline fun unaryMinus() : Vec4 {\r\n    return Vec4(-storage[0], -storage[1], -storage[2], -storage[3])\r\n  }\r\n\r\n  operator inline fun times(scalar : Float) : Vec4 {\r\n    return Vec4(\r\n      storage[0] * scalar,\r\n      storage[1] * scalar,\r\n      storage[2] * scalar,\r\n      storage[3] * scalar\r\n      )\r\n  }\r\n\r\n  operator inline fun div(scalar : Float) : Vec4 {\r\n    return Vec4(\r\n      storage[0] / scalar,\r\n      storage[1] / scalar,\r\n      storage[2] / scalar,\r\n      storage[3] / scalar      \r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(scalar : Float) {\r\n    storage[0] *= scalar\r\n    storage[1] *= scalar\r\n    storage[2] *= scalar    \r\n    storage[3] *= scalar\r\n  }\r\n\r\n  operator inline fun divAssign(scalar : Float) {\r\n    storage[0] /= scalar\r\n    storage[1] /= scalar\r\n    storage[2] /= scalar\r\n    storage[3] /= scalar\r\n  }  \r\n\r\n  operator inline fun plusAssign(other : Vec4) {\r\n    storage[0] += other.storage[0]\r\n    storage[1] += other.storage[1]\r\n    storage[2] += other.storage[2]\r\n    storage[3] += other.storage[3]\r\n  }\r\n\r\n  operator inline fun plus(other : Vec4) : Vec4 {\r\n    return Vec4(\r\n      storage[0] + other.storage[0],\r\n      storage[1] + other.storage[1],\r\n      storage[2] + other.storage[2],\r\n      storage[3] + other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun minusAssign(other : Vec4) {\r\n    storage[0] -= other.storage[0]\r\n    storage[1] -= other.storage[1]\r\n    storage[2] -= other.storage[2]\r\n    storage[3] -= other.storage[3]\r\n  }\r\n\r\n  operator inline fun minus(other : Vec4) : Vec4 {\r\n    return Vec4(\r\n      storage[0] - other.storage[0],\r\n      storage[1] - other.storage[1],\r\n      storage[2] - other.storage[2],\r\n      storage[3] - other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun timesAssign(other : Vec4) {\r\n    storage[0] *= other.storage[0]\r\n    storage[1] *= other.storage[1]\r\n    storage[2] *= other.storage[2]\r\n    storage[3] *= other.storage[3]\r\n  }\r\n\r\n  operator inline fun times(other : Vec4) : Vec4 {\r\n    return Vec4(\r\n      storage[0] * other.storage[0],\r\n      storage[1] * other.storage[1],\r\n      storage[2] * other.storage[2],\r\n      storage[3] * other.storage[3]\r\n      )\r\n  }\r\n\r\n  operator inline fun divAssign(other : Vec4) {\r\n    storage[0] /= other.storage[0]\r\n    storage[1] /= other.storage[1]\r\n    storage[2] /= other.storage[2]\r\n    storage[3] /= other.storage[3]\r\n  }\r\n\r\n  operator inline fun div(other : Vec4) : Vec4 {\r\n    return Vec4(\r\n      storage[0] / other.storage[0],\r\n      storage[1] / other.storage[1],\r\n      storage[2] / other.storage[2],\r\n      storage[3] / other.storage[3]\r\n      )\r\n  }\r\n\r\n  inline fun lengthSquared() : Float {\r\n    return storage[0] * storage[0] + storage[1] * storage[1] + storage[2] * storage[2] + storage[3] * storage[3]\r\n  }\r\n\r\n  inline fun length() : Float {\r\n    return sqrt(lengthSquared())\r\n  }\r\n\r\n  inline fun normalize() : Vec4 {\r\n    val l = this.length()\r\n    storage[0] /= l\r\n    storage[1] /= l\r\n    storage[2] /= l\r\n    storage[3] /= l    \r\n    return this\r\n  }\r\n\r\n  infix inline fun dot(other : Vec4) : Float {\r\n    return (\r\n      storage[0] * other.storage[0] +\r\n      storage[1] * other.storage[1] +\r\n      storage[2] * other.storage[2] +\r\n      storage[3] * other.storage[3] )\r\n  }\r\n\r\n  inline operator fun timesAssign(m : Mat4){\r\n    val t = Float32Array(storage)\r\n    storage[0] = m.storage[ 0] * t[0] + m.storage[ 1] * t[1] + m.storage[ 2] * t[2] + m.storage[ 3] * t[3]\r\n    storage[1] = m.storage[ 4] * t[0] + m.storage[ 5] * t[1] + m.storage[ 6] * t[2] + m.storage[ 7] * t[3]\r\n    storage[2] = m.storage[ 8] * t[0] + m.storage[ 9] * t[1] + m.storage[10] * t[2] + m.storage[11] * t[3]\r\n    storage[3] = m.storage[12] * t[0] + m.storage[13] * t[1] + m.storage[14] * t[2] + m.storage[15] * t[3]            \r\n  }\r\n\r\n  inline operator fun times(m : Mat4) : Vec4 {\r\n    val vp = Vec4(this)\r\n    vp.storage[0] = m.storage[ 0] * storage[0] + m.storage[ 1] * storage[1] + m.storage[ 2] * storage[2] + m.storage[ 3] * storage[3]\r\n    vp.storage[1] = m.storage[ 4] * storage[0] + m.storage[ 5] * storage[1] + m.storage[ 6] * storage[2] + m.storage[ 7] * storage[3]\r\n    vp.storage[2] = m.storage[ 8] * storage[0] + m.storage[ 9] * storage[1] + m.storage[10] * storage[2] + m.storage[11] * storage[3]\r\n    vp.storage[3] = m.storage[12] * storage[0] + m.storage[13] * storage[1] + m.storage[14] * storage[2] + m.storage[15] * storage[3]        \r\n    return vp    \r\n  }  \r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec4 {\r\n    provider.register(property.name, this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec4 {\r\n    return this\r\n  }\r\n\r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec4) {\r\n    set(value)\r\n  }\r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform4fv(uniformLocation, storage)\r\n  }\r\n}\r\n\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.times(v: Vec4) = Vec4(this * v.storage[0], this * v.storage[1], this * v.storage[2], this * v.storage[3])\r\n@Suppress(\"NOTHING_TO_INLINE\")\r\noperator inline fun Float.div(v: Vec4) = Vec4(this / v.storage[0], this / v.storage[1], this / v.storage[2], this / v.storage[3])\r\n","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.reflect.KProperty\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\n\r\nclass Vec4Array(backingStorage: Float32Array?, startIndex: Int = 0, endIndex: Int = 0) : VecArray() {\r\n\r\n  constructor(size : Int) : this(null, size, size) {}\r\n\r\n  override val storage = backingStorage?.subarray(startIndex*4, endIndex*4)?:Float32Array(startIndex*4)\r\n\r\n  override fun set(vararg values : Float) : Vec4Array {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = values.getOrNull(i%4) ?: if(i%4 == 3) 1.0f else 0.0f\r\n    }\r\n    return this\r\n  }\r\n\r\n  operator fun get(i : Int) : Vec4{\r\n    return Vec4(storage, i*4)\r\n  }\r\n\r\n  fun subarray(begin : Int, end : Int) : Vec4Array {\r\n    return Vec4Array(storage, begin, end)\r\n  }\r\n\r\n  fun setNormalized(b : Vec4Array) {\r\n    for(i in 0 until storage.length step 4) {\r\n      val l2 =\r\n        b.storage[i  ] * b.storage[i  ] +\r\n        b.storage[i+1] * b.storage[i+1] +\r\n        b.storage[i+2] * b.storage[i+2] +\r\n        b.storage[i+3] * b.storage[i+3]        \r\n      val linv = 1 / sqrt(l2)\r\n      storage[i  ] = b.storage[i  ] * linv\r\n      storage[i+1] = b.storage[i+1] * linv\r\n      storage[i+2] = b.storage[i+2] * linv\r\n      storage[i+3] = b.storage[i+3] * linv      \r\n    }\r\n  }\r\n\r\n  fun setTransformed(v : Vec4Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 4) {\r\n      storage[i+0] =\r\n          v.storage[i+0] * m.storage[ 0] +\r\n          v.storage[i+1] * m.storage[ 1] +\r\n          v.storage[i+2] * m.storage[ 2] +\r\n          v.storage[i+3] * m.storage[ 3]\r\n      storage[i+1] =\r\n          v.storage[i+0] * m.storage[ 4] +\r\n          v.storage[i+1] * m.storage[ 5] +\r\n          v.storage[i+2] * m.storage[ 6] +\r\n          v.storage[i+3] * m.storage[ 7]\r\n      storage[i+2] =\r\n          v.storage[i+0] * m.storage[ 8] +\r\n          v.storage[i+1] * m.storage[ 9] +\r\n          v.storage[i+2] * m.storage[10] +\r\n          v.storage[i+3] * m.storage[11]\r\n      storage[i+3] =\r\n          v.storage[i+0] * m.storage[12] +\r\n          v.storage[i+1] * m.storage[13] +\r\n          v.storage[i+2] * m.storage[14] +\r\n          v.storage[i+3] * m.storage[15]                \r\n    }\r\n  }\r\n\r\n  fun transformNormal(v : Vec3Array, m : Mat4) {  \r\n    for(i in 0 until storage.length step 3) {\r\n      storage[i+0] =\r\n         v.storage[i+0] * m.storage[ 0] +\r\n         v.storage[i+1] * m.storage[ 1] +\r\n         v.storage[i+2] * m.storage[ 2]\r\n      storage[i+1] =\r\n         v.storage[i+0] * m.storage[ 4] +\r\n         v.storage[i+1] * m.storage[ 5] +\r\n         v.storage[i+2] * m.storage[ 6]\r\n      storage[i+2] =\r\n         v.storage[i+0] * m.storage[ 8] +\r\n         v.storage[i+1] * m.storage[ 9] +\r\n         v.storage[i+2] * m.storage[10]      \r\n    }\r\n  }  \r\n\r\n  operator fun provideDelegate(\r\n      provider: UniformProvider,\r\n      property: KProperty<*>) : Vec4Array {\r\n    provider.register(property.name + \"[0]\", this)\r\n    return this\r\n  }\r\n\r\n  operator fun getValue(provider: UniformProvider, property: KProperty<*>): Vec4Array {\r\n    return this\r\n  }\r\n  \r\n  operator fun setValue(provider: UniformProvider, property: KProperty<*>, value: Vec4Array) {\r\n    set(value)\r\n  }    \r\n\r\n  override fun commit(gl : WebGLRenderingContext, uniformLocation : WebGLUniformLocation, samplerIndex : Int){\r\n    gl.uniform4fv(uniformLocation, storage)\r\n  }  \r\n} ","package vision.gears.webglmath\r\n\r\nimport org.khronos.webgl.Float32Array\r\nimport org.khronos.webgl.get\r\nimport org.khronos.webgl.set\r\nimport org.khronos.webgl.WebGLRenderingContext\r\nimport org.khronos.webgl.WebGLUniformLocation\r\nimport kotlin.random.Random\r\nimport kotlin.math.pow\r\n\r\ninterface Gif {\r\n  operator fun invoke(i : Int) : Float\r\n}\r\n\r\nabstract class VecArray : UniformFloat, Gif {\r\n\r\n  override operator fun invoke(i : Int) : Float{\r\n    return storage[i % storage.length]\r\n  }\r\n\r\n  infix fun gets(other : Gif){\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = other(i)\r\n    }\r\n  }\r\n\r\n  operator fun plus(c : Gif) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) + c(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  operator fun minus(c : Gif) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) - c(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  operator fun times(c : Gif) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) * c(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  operator fun div(c : Gif) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) / c(i)\r\n      }\r\n    }\r\n  }      \r\n\r\n  operator fun times(s : Float) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) * s\r\n      }\r\n    }\r\n  }\r\n\r\n  operator fun div(s : Float) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i) / s\r\n      }\r\n    }\r\n  }\r\n\r\n  fun expand(factor : Int) : Gif {\r\n    return object : Gif {\r\n      override operator fun invoke(i : Int) : Float {\r\n        return this@VecArray(i / factor)\r\n      }\r\n    }    \r\n  }\r\n\r\n  operator fun plusAssign(other : Gif) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] += other(i)\r\n    }\r\n  }\r\n\r\n  operator fun minusAssign(other : Gif) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] -= other(i)\r\n    }\r\n  }  \r\n\r\n  operator fun timesAssign(other : Gif) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] *= other(i)\r\n    }\r\n  }\r\n\r\n  operator fun divAssign(other : Gif) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] /= other(i)\r\n    }\r\n  }  \r\n\r\n  operator fun timesAssign(s : Float) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] *= s\r\n    }\r\n  }\r\n\r\n  operator fun divAssign(s : Float) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] /= s\r\n    }\r\n  }  \r\n\r\n  fun powAssign(s : Float) {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = storage[i].pow(s)\r\n    }\r\n  }\r\n\r\n  fun randomize() {\r\n    for(i in 0 until storage.length) {\r\n      storage[i] = Random.nextFloat()\r\n    }\r\n  }\r\n\r\n  fun clamp() {\r\n    for(i in 0 until storage.length) {\r\n      if(storage[i] < 0.0f) {\r\n        storage[i] = 0.0f\r\n      }\r\n      if(storage[i] > 1.0f) {\r\n        storage[i] = 1.0f\r\n      }\r\n    }\r\n  }  \r\n\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(361);\n"],"names":["root","factory","exports","module","define","amd","this","length","firstTexture","moreTextures","other","i","event","stopPropagation","canvas","overlay","getContext","Scene","meshes","UniformProvider","receiver","program","material","geometry","GameObject","gl","vertexShader","fragmentShader","attributeBindings","createProgram","attachShader","attributeIndex","element","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","ProgramReflection","PhysicsGameObject","$speedBoost","$i_X","$i_Y","$direc","Shader","VERTEX_SHADER","FRAGMENT_SHADER","Program","Texture2D","TexturedQuadGeometry","Mesh","Date","getTime","match","shaderType","sourceUrl","createShader","request","XMLHttpRequest","overrideMimeType","open","$request","$errorMessage","errorMessage","onloadend","it","source","responseText","marked","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorPrefix","getShaderInfoLog","responseURL","send","mediaFileUrl","createTexture","$gl","$image","image","Image","onload","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","generateMipmap","src","Geometry","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","createVertexArray","bindVertexArray","enableVertexAttribArray","vertexAttribPointer","FLOAT","Drawable","u","backingStorage","offset","subarray","Int32Array","size","startIndex","endIndex","IVecArray","v","s","t","elements","getOrNull","allElements","set","name","type","location","mapOf","Vec1","WebGLRenderingContext","Vec2","FLOAT_VEC2","Vec3","FLOAT_VEC3","Vec4","FLOAT_VEC4","Vec1Array","Vec2Array","Vec3Array","Vec4Array","Mat4","FLOAT_MAT4","IVec1","INT","IVec2","INT_VEC2","IVec3","INT_VEC3","IVec4","INT_VEC4","Sampler2D","SAMPLER_2D","Sampler3D","SamplerCube","SAMPLER_CUBE","glProgram","ACTIVE_UNIFORMS","nUniforms","getActiveUniform","glUniform","nameParts","split","lastOrNull","uniformName","dropLast","structName","getUniformLocation","a","UniformDescriptor","debugName","glslStructNames","VecArray","clientWidth","clientHeight","document","keyCode","window","requestAnimationFrame","dt","keysPressed","gameObjects","index","ar","diff","dist","getElementById","innerHTML","l","collisionNormal","relativeVelocity","impulseLength","restitution","powerChance","console","log","walk","speedDisp","directionX","directionY","distance","move","f","speedBoost","item","initPos","b","i_X","i_Y","direc","missile","viewport","width","height","timeAtThisFrame","clearColor","clearDepth","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","drawElements","TRIANGLES","UNSIGNED_SHORT","target","uniformProviders","uniformLocation","samplerIndex","uniform1iv","uniform2iv","uniform3iv","uniform4iv","values","sx","sy","sz","angle","axisX","axisY","axisZ","x","y","z","axisLength2","axisLength","cosa","sina","C","m11","m21","m31","m12","m22","m32","m13","m23","m33","t0","t4","t8","t1","t5","t9","t2","t6","t10","t3","t7","t11","a00","a01","a02","a03","m000","m001","m002","m003","m100","m101","m102","m103","m200","m201","m202","m203","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","m010","m011","det","invDet","provider","property","uniformMatrix4fv","arraySize","UNSIGNED_INT","d","uniformDesc","reflectionVariable","existingVariable","useProgram","textureUnitCount","descList","activeTexture","TEXTURE0","warn","TEXTURE_CUBE_MAP","uniform","error","children","addAll","uniform1fv","uniform2fv","uniform4fv","uniform3fv","App","e","message","<this>","separator","prefix","postfix","limit","truncated","transform","buffer","count","destination","iterator","single","LinkedHashSet_init_$Init$","LinkedHashMap_init_$Init$","minimumValue","maximumValue","to","toString","o","implFindEntry","key","isVarargs","sequence","transformer","initialCapacity","loadFactor","c","mod","seed","seed1","seed2","w","addend","start","endInclusive","first","last","step","end","value","ignoreCase","thisUpper","otherUpper","radix","isNegative","firstChar","limitForMaxRadix","limitBeforeMul","result","digit","char","chars","charAtIndex","arr","range","string","calcNext","input","getNextMatch","indices","thisOffset","otherOffset","second","that","collection","array","<init>","$entryIterator","ArrayList_init_$Init$","HashMap_init_$Init$","internalMap","map","getEntry","chainOrEntry","entry","getChainOrEntryOrNull","hashCode","equality","jClass","givenSimpleName","isInstanceFunction","jClasses","metadata","kClass","capacity","StringBuilder_init_$Init$","content","uppercase","ch","needle","bottom","top","middle","$replacement","replacement","groupName","groups","groupIndex","pattern","options","from","nextPattern","groupCount","newGroupIndex","$match","$range","$nextPattern","$input","interfaces","maxSize","masks","currentSize","imask","iid","iidImask","activeBit","intArray","numberIndex","numberWithSettledBit","mask","initValue","$array","obj","code","hash","descriptor","obj1","obj2","str","instance","constructorFunction","constructor","proto","this_","cause","errorInfo","low","high","thisNeg","otherNeg","a48","a32","a16","b48","b32","b16","c48","c32","c16","c00","approx","numBits","res","rem","approxDouble","approx2","log2","delta","approxRes","approxRem","radixLong","div","digitsPerTime","radixToPower","remDiv","digits","twoPwr32","associatedObjectKey","associatedObjects","suspendArity","kind","ctor","metadataConstructor","parent","iface","possibleActiveBit","parentProto","propName","RuntimeException_init_$Init$","Exception_init_$Init$","NoSuchElementException_init_$Init$","UnsupportedOperationException_init_$Init$","NullPointerException_init_$Init$","ClassCastException_init_$Init$","otherIterator","ourValue","bitCount","v0","rangeStart","rangeEnd","modified","newValue","oldValue","rangeCheck","insertionRangeCheck","increaseLength","amount","previous","value1","value2","computeNext","chainSize","lastEntry","chain","current","old","newEntry","_head","_tail","arity","$arity","stringCsq","lastStart","sb","foundMatch","hasOwnPrototypeProperty","advanceToNextCharacter","code1","code2","args","len","typed","HashSet_init_$Init$","n","list","pairs","paramCount","superType","getter","setter","delimiters","delimiter","currentOffset","nextIndex","isLimited","$delimitersList","$ignoreCase","$this$$receiver","currentIndex","strings","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}